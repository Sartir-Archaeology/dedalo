// buttons

// fn buttons with icons
	.add_mask(@icon_name) {
				mask: url("@{images_base_path}/icons/@{icon_name}");
		-webkit-mask: url("@{images_base_path}/icons/@{icon_name}");
				mask-size: contain;
		-webkit-mask-size: contain;
				mask-repeat: no-repeat;
		-webkit-mask-repeat: no-repeat;
				mask-position: center;
		-webkit-mask-position: center;
	}
	// fn build_button
	.build_button(@icon_name, @color:black, @opacity:0.7, @size:1em) {

		// create base standard button
		.button;

		// custom size overwrite
		width: @size;
		height: @size;

		// custom icon svg name
		.add_mask(@icon_name);

		// custom icon color
		background: @color;

		// custom size overwrite
		opacity: @opacity;
	}
	// button generic to apply to span elements
	.button { // @icon_name:null, @color:black, @opacity:0.7, @size:1em
		cursor: pointer;
		user-select: none;
		display: inline-block;
		width: 1em;
		min-width: 1em;
		height: 1em;
		opacity: 0.8;
		background-color: #000000;
		// background-repeat: no-repeat;
		// background-position: center;
		// background-size: contain;
		//padding: 0.5em;
		line-height: 1em;
		margin: 0.5em;
		margin-top: 0.25em;
		margin-bottom: 0.25em;

		&:hover {
			opacity: 1 !important;
		}
		&:active {
			opacity: 0.4 !important;
		}

	// inside buttons_container, all buttons are white
		.buttons_container & {
			background-color: #ffffff;
		}
	// variants after create button
		&.white {
			background-color: #ffffff;
		}
	}//end .button



// button . explicit buttons (dialog box etc.)
	button {
		// appearance: none;
		// font-size: .9em;
		// background-color: #a6a6a6;
		// border-radius: 0.30em;
		// color: #ffff;
		// border: none;
		padding-left: 1rem;
		padding-right: 1rem;
		padding-top: 0.375rem;
		padding-bottom: 0.375rem;

		// bootstrap
		// display: inline-block;
		font-weight: 400;
		color: #212529;
		text-align: center;
		vertical-align: middle;
		cursor: pointer;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
		background-color: transparent;
		border: 1px solid transparent;
		// padding: .375rem .75rem;
		font-size: 1rem;
		line-height: 1.5;
		border-radius: .25rem;
		transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;

		display: flex;
    	align-items: center;

		&.primary {
			color: #fff;
			background-color: @color_primary;
			border-color: @color_primary;
		}
		&.secondary {
			color: #fff;
			background-color: @color_secondary;
			border-color: @color_secondary;
		}
		&.success {
			color: #fff;
			background-color: @color_success;
			border-color: @color_success;
		}
		&.danger {
			color: #fff;
			background-color: @color_danger;
			border-color: @color_danger;
		}
		&.warning {
			// color: #212529;
			// background-color: #ffc107;
			// border-color: #ffc107;
			color: #ffffff;
			background-color: @color_orange_dedalo;
			border-color: darken(@color_orange_dedalo, 2%);
		}
		&.info {
			color: #fff;
			background-color: @color_info;
			border-color: @color_info;
		}
		&.light {
			color: #212529;
			background-color: @color_light;
			border-color: @color_light;
		}
		&.dark {
			color: #fff;
			background-color: @color_dark;
			border-color: @color_dark;
		}
		&.link {
			font-weight: 400;
			color: @color_primary;
			text-decoration: none;
		}
	}


// fn append_icon (used by tag element 'button')
	.fn_append_icon(@icon_name, @color:#3f3f3f, @opacity:1) {
		&:before {
			content: " ";
			display: inline-block;
			width: 1em;
			height: 1em;
			margin-right: 0.5em;
			vertical-align: baseline;
			background-color: @color;
			opacity: @opacity;
			.add_mask(@icon_name);
		}
	}



// generic icons for buttons
	.remove {
		@icon_name : 'trash.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.add {
		@icon_name : 'add.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.edit {
		@icon_name : 'edit.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.pen {
		@icon_name : 'pen.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.reset {
		@icon_name : 'eraser.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.align_justify {
		@icon_name : 'justify.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.search {
		@icon_name : 'find.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.email {
		@icon_name : 'email.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.close {
		@icon_name : 'close.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.link {
		@icon_name : 'link.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.calendar {
		@icon_name : 'calendar.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.upload {
		@icon_name : 'upload.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.download {
		@icon_name : 'download.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.find {
		@icon_name : 'find.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.save {
		@icon_name : 'save.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.eye {
		@icon_name : 'eye.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}
	.full_screen {
		@icon_name : 'full_screen.svg';
		button&  { .fn_append_icon(@icon_name); }
		.button& { .add_mask(@icon_name); }
	}



// .contenteditable_buttons (used by content editable)
	.contenteditable_buttons {
		position: absolute;
		top: -1.54em;
		height: 1.5em;
		z-index: 9;
		display: flex;
		background-color: @color_grey_dark;
		padding: 0;
		border-top-left-radius: 0.25em;
		border-top-right-radius: 0.25em;

		>.button {
			color: white;

			&:before {
				content: " ";
				width: 1em;
				height: 1em;
				background-size: contain;
				background-repeat: no-repeat;
				margin-right: 0.25em;
				padding-right: 1em;
				vertical-align: text-bottom;
			}

			&.bold:before {
				//background-image: url(../../themes/default/icons/bold.svg);
				// .background_icon('bold.svg');
				.build_button('bold.svg', black, 1);
			}
			&.italic:before {
				//background-image: url(../../themes/default/icons/italic.svg);
				// .background_icon('italic.svg');
				.build_button('italic.svg', black, 1);
			}
			&.underline:before {
				//background-image: url(../../themes/default/icons/underline.svg);
				// .background_icon('underline.svg');
				.build_button('underline.svg', black, 1);
			}
			&.replace:before {
				//background-image: url(../../themes/default/icons/exchange.svg);
				// .background_icon('exchange.svg');
				.build_button('exchange.svg', black, 1);
			}
		}
	}
