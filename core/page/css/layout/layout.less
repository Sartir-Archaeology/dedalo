/**
* layout
*
* Base common layout styles used by components, services, section, etc.
*
* Included from main.less file
*/

// hilite (used on focus)
	.hilite_mixin(@outline_offset:0) {
		outline-offset: @outline_offset;
		outline: 1px solid @color_hilite;
		box-shadow: 0px 0px 10px @color_hilite;
		opacity: 1;
		z-index: 1;
	}
// hilite static
	.hilite_element {
		will-change: transform; // @see https://developer.mozilla.org/en-US/docs/Web/CSS/will-change
		transition: background-color 600ms linear;
		background-color: #ffdca9;
		.label {
			color: #757575;
		}
	}

// label_top. It's used in section group and inspector labels
	.label_top {
		background-color: @color_grey_light;
		position: relative;
		padding: 0.33em;
		padding-left: 0.5em;
		cursor: pointer;
		text-transform: uppercase;
		color: @color_grey_ultradark;

		@media screen and (max-width: @width_break_point_1) {
			padding: 1rem;
		}
	}

// generic html inputs appearance. Used by search, tools, etc.
	.dd_input {
		font-size: 1em;
		height: 2.0em;
		margin-right: 0.5em;
		padding: 0.25em;
		border: none;
		outline: 1px solid @color_grey_medium;
		transition: all .5s ease, padding 0s;
		opacity: 0.75;
		vertical-align: bottom;

		// &.typology_selector { // , &input[type="select"]
		&,select {
			width: 100%;
		}

		// on focus inputs, adds a soft shadow and outline
		&:focus {
			.hilite_mixin;
		}
	}//end .dd_input

// placeholder common style
	input::-webkit-input-placeholder { /* Chrome/Opera/Safari */
	  font-style: italic;
	  opacity: 0.95;
	}
	input::-moz-placeholder { /* Firefox 19+ */
	  font-style: italic;
	  opacity: 0.95;
	}
	input:-ms-input-placeholder { /* IE 10+ */
	  font-style: italic;
	  opacity: 0.95;
	}
	input:-moz-placeholder { /* Firefox 18- */
	  font-style: italic;
	  opacity: 0.95;
	}

// area common definitions
	.wrapper_area {
		display: table;
		width: 100%;
		padding: 1rem;

		>.label {
			font-size: 1.6rem;
			padding-top: 0px;
			padding-bottom: 0.5rem;
			padding-left: 0.2rem;
		}

		>.content_data {
			display: flex;
			flex-wrap: wrap;
		}

		>.buttons {
			display: flex;
			flex-direction: row-reverse;
			width: 100%;
			margin: 0px;

			>.button {
				background-color: @color_orange_dedalo;
				color: @color_white;
				display: flex;
				width: auto;
				padding: 1em;
				padding-top: 0.5em;
				padding-bottom: 0.5em;
				border-radius: 0.25em;

				&:hover {
					color: @color_black;
				}
				&:active {
					color: @color_white;
				}
			}
		}//end .buttons
	}//end area



// component common definitions
	.wrapper_component {
		position: relative;
		margin: 0px;
		padding: 0px;
		z-index: auto; // (!) important to allow fullscreen configs
		color: @color_grey_ultradark;

		&.edit {
			display: grid;
			// grid-template-rows: var(--component_label_height) auto;
			grid-template-rows: var(--component_label_height) minmax(auto, 100%);
			// grid-column: 1 / span 10; // default width is 100% (10 columns of 10)
			align-content: start;
		}

		&.modified {
			&:after {
				content: " ";
				display: block;
				width: 100%;
				height: 3px;
				position: absolute;
				left: 0px;
				top: 0px;
				background-color: @color_orange_dedalo;
				z-index: 2;
			}
		}

		&.fullscreen {
			.buttons_fold {
				top: 0.5rem !important;
				position: fixed !important;
			}
		}

		// label
		>.label {
			padding: 1rem;
			padding-bottom: 0px;
			padding-top: 0.4rem;
			flex: 1 1 100%;
			letter-spacing: 0.5px;
			text-overflow: ellipsis;
			overflow: hidden;
			white-space: nowrap;
			cursor: default;
			font-weight: 300;
		}

		// buttons_container
		>.buttons_container {
			position: absolute;
			background-color: @color_orange_dedalo;
			user-select: none;
			display: none;
			flex: 0 1 1em;
			z-index: 1;
			box-shadow: 0px 0px 0px 1px #f49d46;
			right: 0px;
			width: auto;
			padding: 0px;
			top: -2rem;
			max-height: 2rem;
			border-top-left-radius: 0.25em;
			border-top-right-radius: 0.25em;
			font-size: 1.1rem;

			.buttons_fold {

			}

			.button {

			}

			// buttons inside
			span {
				margin-left: 0.5em;
				margin-bottom: 0.45em;
				margin-top: 0.45rem;

				&:first-child {
					margin-left: 0.75rem;
				}
				&:last-child {
					margin-right: 0.75rem;
				}
			}
		}//end >.buttons_container

		// component_warning
		>.component_warning {
			position: absolute;
			display: flex;
			justify-content: center;
			background-color: @color_danger;
			color: @color_white;
			user-select: none;
			left: -2rem;
			top: 0px;
			width: 2rem;
			z-index: 1;
			border-top-left-radius: 0.25em;
			border-bottom-left-radius: 0.25em;
			font-size: 1.1rem;
			overflow: hidden;

			&.right_side {
				left: 100%;
				border-top-left-radius: unset;
				border-bottom-left-radius: unset;
				border-top-right-radius: 0.25em;
				border-bottom-right-radius: 0.25em;
			}

			// buttons inside
			span {
				margin-top: 0.25em;
				margin-bottom: 0.25rem;
				background-color: @color_white;
			}
		}

		// content_data
		>.content_data {
			color: @color_grey_ultradark;
			height: inherit;
			display: flex;
			flex: 1 1 100%;
			flex-wrap: wrap;
			align-items: flex-start;
			align-content: flex-start;
			padding: 1em;
			padding-top: 0.5em;
			overflow-wrap: anywhere; // force break long text like URL
		}//end >.content_data

		&.edit, &.search, &.player {
			// grey line left and down of wrapper
			box-shadow: -1px 1px 0 @color_grey_light, inset -1px 1px 0 @color_grey_light;

			// inside column, remove shadow
			.column & {
				&:not(.active) {
					box-shadow: none;
				}
				.content_data {
					padding: 0px;
				}
			}

			@media screen and (max-width: @width_break_point_1) {
				flex: 0 0 100%;
				overflow-x: auto;
				max-width: calc(100vw - 2rem);
			}

			>.label {
				height: var(--component_label_height);
				color: #a1a1a1;

				>.icon {
					vertical-align: bottom;

					&.alternative {
						background-color: @color_grey_dark;
					}
					&.deprecated {
						background-color: @color_orange_dedalo;
					}
				}

				.error& {
					color: @color_white !important;
				}

				// label_info is used in search mode
				>.label_info {
					font-size: 80%;
					margin-left: 0.5rem;
					font-weight: 200;

					&:before {
						content: '[';
					}
					&:after {
						content: ']';
					}
				}
			}

			.button_exit_edit {
				display: none;
				position: absolute;
				top: -6px;
				right: -9px;
				z-index: 3;
			}

			// content data defaults
			>.content_data {
				height: inherit;
				max-height: inherit;

				// former li
				>.content_value {
					height: auto;
					position: relative;
					width: 100%;
				}
			}

			.show_on_active {
				display: none;
			}
			&.active {
				z-index: 3; // 3 allow over portal drag handlers
				box-shadow: -1px 1px 0px @color_orange_dedalo, inset -1px 1px 0px @color_orange_dedalo;
				color: @color_orange_dedalo;
				// overflow. allow set flex-basis (properties width). Remember labels are 'text-overflow: ellipsis'
				overflow: initial; // !important
				&:not(.hilite_element) {
					background-color: lighten(@color_orange_dedalo, 45.1%);
				}

				.show_on_active {
					display: block;
				}

				@media screen and (max-width: @width_break_point_1) {
					flex: 0 0 calc(100% - 2em) !important;
				}

				>.buttons_container {
					display: block !important;
					white-space: nowrap;
					z-index: 2;

					.button:last-of-type {
						margin-right: 0.75rem;
					}
				}
			}//end &.active
		}//end &.edit

		&.search {
			flex: 1 1 100%;
			overflow: visible; // enable to see the tool-tip
		}

		&.list {

			// media_wrapper
			&.media_wrapper {
				display: inline-block;
				padding: 0px;
				text-align: center;
				height: 100%;
				@media screen and (max-width: @width_break_point_0) {
					height: auto;
				}

				// image, content_data>img
				>img, >.content_data>img {
					display: inline-block;
					padding: 0px;
					width: 100%;
					height: 100%;
					// fit image contains
					object-fit: contain;
					object-position: center;
					cursor: pointer;
					&:active {
						opacity: 0.33;
					}
				}
			}
		}//end &.list

		&.error {
			transition: background-color 0.3s ease;
			background-color: @color_danger !important;
		}

		// inside .section_record.edit context
		.wrapper_tool &,
		.search_group &,
		dd-modal &, // dd-modal .content &, //  dd-modal .content
		.project_container & { // , .page &

			&.list {

			}

			>.top {
				display: flex;
				flex: 0 1 100%;
				align-items: center;
				justify-content: flex-end;
				padding-top: 0.75em;
				padding-bottom: 0px;

				>select.mono {
					background-color: transparent;
					outline: none;
					-webkit-appearance: none;
					-moz-appearance: none;
					appearance: none;
					text-indent: 1px;
					text-overflow: '';
					width: auto;
					pointer-events: none;
				}
			}//end >.top

			>.content_data {

				.list & {
					padding: 0px;
				}

				@media screen and (max-width: @width_break_point_1) {
					flex: 1 1 100%;
				}

				>.q_operator {
					width: 3em;
				}

				.close99 {
					position: absolute;
					top: -6px;
					right: -9px;
					z-index: 3;

					display: none;
				}

				&.vertical {
					flex: 1 1 100%;
					background-color: @color_grey_dark_3;
					justify-content: center;
					flex-flow: unset;
				}
			}//end >.content_data

			@media screen and (max-width: 1280px) {

			}
		}//end .section_record &, .wrapper_tool &
	}//end .wrapper_component

// tool_container (where is place the tool)
	.tool_container {

	}//end tool_container

// dd-modal
	dd-modal {
		margin: 0px;
		padding: 0px;
		border: 0px;
		font-size: 100%;
		font: inherit;
		vertical-align: baseline;
		z-index: unset;

		@media screen and (max-width: @width_break_point_0) {
			width: 100%;
		}

		.spinner_modal {
			position: relative;
			margin: 1rem;
		}

		.header {
			display: flex;
			padding: 1rem;
			background-color: @color_orange_dedalo;
			color: white;
			font-weight: normal;
			z-index: 2;
			// shadow like menu
			box-shadow: 0 2px 3px rgba(0,0,0,.4);

			&.label, &.content, >div.label, >span.label {
				font-size: 1.4em;
				line-height: 1.5rem;
				padding-right: 0.5em;

				text-overflow: ellipsis;
				overflow: hidden;
				padding-right: 1rem;

				.button {
					vertical-align: text-bottom;
					margin-right: 0.5em;
					display: inline-block;
				}
			}

			.description {
				font-size: 0.95rem;
				font-weight: 300;
				padding-top: 0.25rem;
			}

			&.mini {
				display: flex;
				align-items: center;
				padding: 0px;
				height: 60px;
				width: 100%;

				.close_modal {
					color: @color_black;
				}
				.label {
					width: calc(100% - 1rem);
					overflow: hidden;
					font-size: 15px;
					font-weight: normal;
					line-height: 1.2rem;
					padding: 0.5rem;
					display: flex;
				}
				select, .description {
					display: none;
				}
				.wrapper_tool {
					display: none;
				}
			}
		}

		.header_custom {
			position: absolute;
			width: 100%;
			padding: 0.5rem;
			display: flex;
			align-items: center;

			span.label {
				padding-left: 0.5rem;
				font-weight: 300;
			}

			select {
				outline: none;
				border-radius: 4px;
				padding-right: 2rem;
			}
		}

		.body {

			&.content {
				padding: 1rem;
				padding-bottom: 1.5rem;
				padding-top: 3rem;
			}

			&.content_no_buttons {
				padding: 0.5rem;
				min-width: 34rem;
				min-height: 20rem;

				>.wrapper_component {
					margin: 1rem;
				}
			}

			&.fill_vertical {
				height: calc(70vh - 6rem);
			}

			.block_label {
				display: block;
				padding: 1rem;

				input {
					cursor: pointer;
					margin-right: 0.5rem;
					vertical-align: bottom;
				}
			}

			.block {
				display: block;
				padding: 1rem;
			}
		}//end .body

		.iframe_container {
			padding-top: 17px;
			>iframe {
				height: calc(100vh - 68px);
				width: 100%;
				z-index: 1;
				padding: 0px;

				.header_wrapper_list {
					top: 0 !important;
				}
			}
		}

		.footer {
			text-align: right;

			button {
				margin-bottom: 1rem;
				margin-left: 0.5rem;
			}
			button:first-of-type {
				margin-left: 0rem;
			}

			&.content {
				padding: 1.5rem;
				padding-top: 0px;
				padding-bottom: 0px;
			}

			// default text align is right
			// overwrite it using this selectors:
			&.center {
				text-align: center;
			}
			&.left {
				text-align: left;
			}
			&.distribute {
				display: flex;
				justify-content: space-between;
				padding-top: 0rem;
			}
		}
	}//end dd-modal

// disabled_component
	.disabled_component {
		// pointer-events: none !important;

		.content_data.component, .buttons_container, input, .radio_label {
			pointer-events: none !important;
			user-select: none;
		}

		.autocomplete_search_wrapper {
			display: none !important;
		}

		.buttons_container, .button {
			display: none !important;
		}

		input, select {
			outline: none;
		}

		select {
			-webkit-appearance: none;
			-moz-appearance: none;
			text-indent: 1px;
			text-overflow: '';
		}

		&.active {

			// lock icon at top right
			&:after {
				content: " ";
				.fn_build_button('lock.svg', @color_danger, 1);
				position: absolute;
				top: 4px;
				right: 4px;
				opacity: 0.5;
			}
		}
	}


// component_message
	.component_message {
		position: absolute;
		min-height: 3em;
		top: -3em;
		width: 100%;
		color: @color_white;
		user-select: none;
		line-height: 1.5em;

		&.error {
			background-color: @color_danger;
		}

		&.warning {
			background-color: @color_warning;
		}

		&.ok {
			background-color: @color_success;
		}

		.text {
			padding: 0.5em;
		}

		.close {
			cursor: pointer;
			width: 1em;
			height: 1em;
			text-align: center;
			position: absolute;
			right: 0.25em;
			top: 0px;
			height: 1.5em;
			margin: 0px;
		}
	}//end .component_message


// EXPERIMENTAL . singular for checking assignments only
	.singular {

		&.wrapper_component {
			background-color: #F0FBA1 !important;
		}
		&.label {
			background-color: #7CFCDD !important;
			flex: 100% !important;
		}
		&.content_data {
			background-color: #F8CAB7 !important;
			flex: 0 0 90% !important;
		}

		&:after {
			content: "*";
		}
	}

// EXPERIMENTAL section custom test
	.green {
		&[class^="wrapper_"] { // affects all classes starting with 'wrapper_' (wrapper_section, wrapper_component, etc.)
		// &.wrapper_section {
			background-color: #87FA88 !important;
			padding: 1em;
			border-radius: 0.5em;
		}
	}
	.red {
		&.content_data {
			background-color: #ffbcaa !important;
		}
	}

// EXPERIMENTAL component custom test
	.full {
		&.wrapper_component {
			background-color: #35F9E1 !important;
			flex: 100% !important;
		}
	}

// input_tex_area contenteditable
	.input_tex_area {
		width: 100%;
		background-color: @color_white;
		margin-right: 0.25em;
		padding: 0.5em;
		padding-right: 1em;
		min-height: 8em;
		overflow: auto;
		max-height: 14em;
		word-break: break-word;
	}//.input_tex_area

// components wrapper modifiers
	&.width_100 {
		flex: 1 1 100% !important;
		width: 100%;
	}

// full screen
	.fullscreen {
		position: fixed !important;
		top: 0px !important;
		left: 0px !important;
		width: 100% !important;
		height: 100% !important;
		z-index: 10 !important;
		max-height: unset !important;
		background-color: @color_white !important;

		.buttons_container {
			left: unset !important;
			right: 0px !important;
		}

		.content_data {
			padding-right: 1rem !important;
			max-height: unset !important;
			height: 100% !important;

			>ul{
				width: 100% !important;
				>li{
					height: calc(100% - var(--component_label_height)) !important;

					.canvas[resize] {
						height: 100%;
						width: 100%;
					}
				}
			}
		}

		.exit_button {
			position: fixed;
			top: 0.25rem;
			right: 0.5rem;
			width: 1.5rem;
			height: 1.5rem;
			background-color: @color_orange_dedalo;
			z-index: 9999;
			cursor: pointer;
			-webkit-mask-image: url('../../themes/default/icons/full_screen.svg');
					mask-image: url('../../themes/default/icons/full_screen.svg');
			-webkit-mask-size: contain;
				mask-size: contain;
			-webkit-mask-repeat: no-repeat;
					mask-repeat: no-repeat;
			-webkit-mask-position: center;
					mask-position: center;
		}
	}//end .fullscreen



// component buttons show / hide PROPOSAL !
	// former ul
	.content_data {
		>.content_value {
			// default state of buttons here
			.hidden_button {
				display: none;
				// user click force show to prevents hide the button again
				&:active {
					display: inline-block;
				}
			}

			// if any li inside element is focused, show hidden buttons
			&:focus-within {
				.hidden_button {
					display: inline-block;
				}
			}
		}
	}//end .content_data

// json_editor
	.jsoneditor {
		resize: vertical;
		overflow: hidden;

		// thematize
		&.jsoneditor-mode-code {
			border: thin solid #c0c0c0;
		}

		.ace-jsoneditor .ace_marker-layer .ace_active-line {
			background-color: #f2f2f2;
		}

		>.jsoneditor-menu {
			background-color: #949494;
			border-bottom: 1px solid #838383;
			display: table;
		}

		>.jsoneditor-menu a.jsoneditor-poweredBy {
			top: unset;
			bottom: 0px;
			padding: 5px;
			color: #b3b3b3;
		}

		&.isDirty {
			border: 1px solid @color_danger !important;

			>.jsoneditor-menu {
				background-color: @color_danger !important;
			}
		}
	}//end .jsoneditor

// json-container. Is the JSON data viewer used to show fold-able data like
// server messages in area_development widgets
	.json-container {
		background-color: @color_white_dirty;
		margin: 0px;
		margin-top: 1em;
		padding: 0.5rem;
		font-size: 14px;
		border-radius: 3px;

		.json-key {
			word-break: initial;
		}
	}

// components_list_container (used in search and tool_export)
	.components_list_container {
		display: flex;
		width: fit-content;
		border-right: 1px solid @color_grey_dark;
		font-size: 1em;
		background-color: @color_white_dirty;

		ul {
			display: block;
			position: relative;
			max-height: 80vh;
			overflow: auto;

			// Standard section container (receive all JSON elements inside)
			&.list_container {

			}

			&.target_list_container {
				display: flex;
				border-left: 1px solid @color_grey_dark;
			}

			li {
				position: relative;
				line-height: 1em;
				padding: 0.307rem;
				display: block;
				user-select: none;

				// Section label bar
				&.section_bar_label {
					display: block;
					background-color: @color_grey_dark_3;
					color: @color_white;
					// Avoid click events affect here (received with :after)
					pointer-events: none;

					&:after {
						content: 'X';
						display: block;
						float: right;
						width: 1em;
						text-align: center;
						cursor: pointer;
						// Allow receive here the click button of real DOM element
						pointer-events: all;
					}

					&.close_hide:after {
						display: none;
					}

				}//end section_bar_label

				// section_group_label
				&.section_group_label {
					background-color: @color_grey_dark;
					color: @color_white;
				}

				// component_label
				&.component_label {
					background-color: @color_white;
					border-bottom: 0.5px solid @color_grey_dark_3;

					// truncate text
					padding-right: 2.0em;
					white-space: nowrap;
					overflow: hidden;
					text-overflow: ellipsis;

					&:hover {
						background-color: @color_orange_dedalo !important;
						color: @color_white;
					}
					&:active {
						opacity: 0.6;
					}

					@background-top: 5px;

					// Drag-gable background svg
					&.element_draggable {
						cursor: move;
						background-image: url('../../themes/default/draggable.svg');
						background-color: rgba(0, 0, 0, 0);
						background-position-x: 0%;
						background-position-y: 0%;
						background-size: auto auto;
						background-position: right 5px bottom @background-top;
						background-repeat: no-repeat;
						background-size: 12px;
					}

					// has_subquery
					&.has_subquery {
						cursor: pointer;
						background-position: right 1em bottom @background-top;

						// Arrow
						&:after {
							content: ' ';
							display: block;
							pointer-events: none;
							position: absolute;
							background-image: url('../../themes/default/icons/play.svg');
							background-repeat: no-repeat;
							background-position: center;
							background-size: 0.55em;
							width: 1em;
							height: 1em;
							right: 0px;
							top: 0.308rem;
							cursor: pointer;
						}

						&.active {
							background-color: @color_orange_dedalo !important;
						}
					}

				}//end component_label

			}//end li
		}//end ul.components_list_container
	}//end .components_list_container

.bg_warning {
	background-color: #ffe9e9;
	background-image: url('../../themes/default/dedalo_logo.svg');
	border: 1px dashed #ef9b9b;
	background-size: 5rem;
	background-repeat: space;
}

// media components base CSS unified
.media_wrapper.edit.wrapper_component {

	// shared quality_selector
	.quality_selector {
		position: absolute;
		top: 0.75rem;
		right: 0.75rem;
		margin: 0px;
		padding: 0px;
		padding-left: 0.33rem;
		padding-right: 1rem;
		height: 1.25rem;
		max-width: 5rem;
		font-size: 0.9rem;
		border: 0px;
		outline: none;
		border-radius: 4px;
		z-index: 1;
		box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
		cursor: pointer;

		.fullscreen& {
			width: auto !important;
			right: 2.25rem;
			top: 0.5rem;
		}
	}

	.media_content_data {
		display: contents;
	}

	.media_content_value {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		height: var(--media_min_height);

		// with margin option
		margin: 1rem;
		margin-top: 0.25rem;
		width: calc(100% - 2rem);

		// resize vertical
		resize: vertical;
		overflow: hidden;

		@media screen and (max-width: @width_break_point_1) {
			height: unset;
			max-height: 404px;
		}
	}

	&.fullscreen {
		.media_content_value {
			height: unset;
		}
	}
}

.media_wrapper.list.wrapper_component {
	&.view_default, &.view_mosaic {
		height: var(--view_line_height);
		@media screen and (max-width: @width_break_point_0) {
			background-color: unset !important;
		}
	}
}

// prevents component_3d an other media to loose the necessary height in the
// upload window preview
.preview_component_container {
	.media_wrapper.edit.wrapper_component .media_content_value  {
		@media screen and (max-width: @width_break_point_1) {
			height: var(--media_min_height);
		}
	}
}

// affects all media components span wrapper (3d,av,image,pdf,svg)
.media.view_text {
	display: inline-block;
	height: var(--view_text_height);
	vertical-align: middle;
}

.page_error_container {
	padding: 4rem;
	line-height: 2.5rem;

	// only apply to page error, is not generic
	&.raspa_error {
		// background Raspa error
		 &:after {
			content: ' ';
			background-image: url('../../themes/default/raspa_404.jpg');
			background-size: cover;
			background-repeat: no-repeat;
			height: 100%;
			width: 100%;
			position: absolute;
			left: 0px;
			top: 0px;
			min-height: 100vh;
			overflow: hidden;
			opacity: 0.3;
			z-index: -1;

			@media screen and (max-width: @width_break_point_0) {
				background-position: 35%;
			}
		}
	}

	&.not_logged_error {
		 &:after {
			content: ' ';
			opacity: 0.3;
		}
	}

	h1 {
		font-size: 1.7rem;
		margin: 0.67em 0;
		margin-bottom: 0px;
		color: @color_grey_darken;
		font-weight: 200;
	}

	.more_info {
		margin-top: 1.5rem;
	}

	.link {
		display: block;
	}

	>.icon_dedalo {
		height: 7rem;
	}

	>.server_response_error {

	}
}

// process_status_node. Display process info while is running
.process_status_node {
	position: relative;
	padding: 0px !important;
	margin-top: 0.5rem !important;

	>.spinner {
		position: absolute !important;
		top: 0.48rem !important;
		left: 0.5rem !important;
		margin: 0px !important;
		scale: 0.82;
	}

	>.button_stop_process {
		position: absolute;
		display: flex;
		top: 0.72rem;
		right: 0.5rem;
		background-color: @color_grey_light;
		border-radius: 2.5rem;
		z-index: 1;
		height: 2.6rem;

		&:active {
			opacity: 0.5;
		}
	}

	>.info_node {
		padding: 0px;

		// div msg_node
		>.msg_node {
			background-color: @color_grey_ultralight;
			display: block;
			width: 100%;
			min-height: 4rem;
			font-family: monospace;
			font-size: 1.1rem;
			line-height: 1.35;
			padding: 1.25rem ;
			padding-right: 5.4rem;
			padding-left: 3.8rem; // gap for spinner
			margin-bottom: 1rem;
			border-radius: 2.1rem;

			&.done {
				font-weight: bold;
				padding-left: 1.5rem; // remove spinner gap
			}

			>.error {
				display: block;
				padding: 0.5rem;
				margin-top: 0.5rem;
				margin-left: 0px;
				border-radius: 3px;
			}
		}

		// pre json_data. Using default pre styles
		>.json_data {

		}
	}
}//end .process_status_node


// relation_list_container
// relation_list_placeholder
// Used in section record delete modal dialog (rendered by portal)
// Is DOM replaced by relation_list_container block when is ready
.relation_list_placeholder {
	min-height: 3.67rem;
	max-width: 100%;
}
.relation_list_container {
	.relation_list_head {
		user-select: none;
	}
}

// grid choose (used with svg media, etc.)
// Note that grid_choose_container it a temporal top level div used
// by service_autocomplete to display special datalist like in countermarks case
.grid_choose_container {
	position: absolute;
	background-color: @color_light;
	box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
	width: 20rem;
	min-width: 15rem;
	max-height: 70vh;
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-gap: 1rem;
	padding: 1.5rem;
	padding-top: 0rem;
	overflow: auto;
	z-index: 4;
	resize: auto;

    min-height: 10rem;

	.grid_choose_header {
		height: 2.5rem;
		width: 100%;
		background-color: @service_bg_color;
		cursor: move;
		grid-column: span 2;
		width: calc(100% + 3.5rem);
		margin-left: -2rem;
		margin-top: 0;
		position: sticky;
		top: 0;
		z-index: 2;
		padding: 0.75rem;
		padding-left: 1.25rem;
		padding-right: 2rem;
		color: @color_white;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	.close {
		position: absolute;
		display: block;
		right: 0.25rem;
		top: 0.5rem;
		cursor: pointer;
		width: 1.4rem;
		height: 1.4rem;
		z-index: 2;
	}

	.selected_instance_node {
		display: block;
		grid-column: span 2;
		text-align: center;
		font-size: 1.1rem;
		position: sticky;
		top: -0.5rem;
		background-color: @color_white;
		width: 100%;
		z-index: 1;
		padding-top: 0.5rem;
		padding-bottom: 0.5rem;
		border-bottom: 1px solid #e7e6e6;

		.column {
			outline: none;
		}
	}

	>.wrapper_component {
		border: 1px solid #e7e6e6;
		border-radius: 0.3em;
	}

	>.component_svg {
		max-height: 8rem;
		min-width: 4rem;

		// image src svg
		.svg {
			cursor: move;
		}
	}
}//end .grid_choose_container
