/**
* layout
*
* Base common layout styles used by components, services, section, etc.
*
* Included from main.less file
*/



// hilite (used on focus)
	.hilite_mixin(@outline_offset:0) {
		outline-offset: @outline_offset;
		outline: 1px solid @color_hilite;
		box-shadow: 0px 0px 10px @color_hilite; //rgba(26, 154, 245, .5);
		opacity: 1;
		z-index: 1;
	}
// hilite static
	.hilite_element {
		transition: background-color 600ms linear;
		background-color: #ffdca9;
		.label {
			color: #757575;
		}
	}



// label_top. It's used in section group and inspector labels
	.label_top {
		background-color: @color_grey_light;
		position: relative;
		padding: 0.33em;
		padding-left: 0.5em;
		cursor: pointer;
		text-transform: uppercase;
		color: @color_grey_ultradark;

		@media screen and (max-width: @width_break_point_1) {
			padding: 1rem;
		}
	}



// generic html inputs appearance. Used by search, tools, etc.
	.dd_input {
		font-size: 1em;
		height: 2.0em;

		margin-right: 0.5em;
		padding: 0.25em;
		//border-radius: 3px;
		border: none;
		outline: 1px solid @color_grey_medium; // #eeebeb;

		transition: all .5s ease, padding 0s;
		//transition: padding 0s;
		opacity: 0.75;
		vertical-align: bottom;

		// &.typology_selector { // , &input[type="select"]
		&,select {
			width: 100%;
		}

		// on focus inputs, adds a soft shadow and outline
		&:focus {
			.hilite_mixin;
		}
	}//end .dd_input



// placeholder common style
	input::-webkit-input-placeholder { /* Chrome/Opera/Safari */
	  font-style: italic;
	  opacity: 0.95;
	}
	input::-moz-placeholder { /* Firefox 19+ */
	  font-style: italic;
	  opacity: 0.95;
	}
	input:-ms-input-placeholder { /* IE 10+ */
	  font-style: italic;
	  opacity: 0.95;
	}
	input:-moz-placeholder { /* Firefox 18- */
	  font-style: italic;
	  opacity: 0.95;
	}



// area common definitions
	.wrapper_area {

		>.label {
			font-size: 1.6rem;
			padding-top: 0px;
			padding-bottom: 0.5rem;
			padding-left: 0.2rem;
		}

		>.content_data {
			display: flex;
			flex-wrap: wrap;
		}

		>.buttons {
			display: flex;
			flex-direction: row-reverse;
			width: 100%;
			margin: 0px;

			>.button {
				background-color: #FD891D;
				color: #ffffff;
				// display: block;
				display: flex;
				width: auto;
				padding: 1em;
				padding-top: 0.5em;
				padding-bottom: 0.5em;
				border-radius: 0.25em;

				&:hover {
					color: #000000;
				}
				&:active {
					color: #ffffff;
				}
			}
		}//end .buttons
	}//end area



// component common definitions
	.wrapper_component {
		position: relative;
		margin: 0px;
		padding: 0px;
		z-index: auto; // (!) important to allow fullscreen configs like tinymce
		// color: @color_grey_dark; // #9e9e9e;
		color: @color_grey_ultradark; // #353535

		&.edit {
			display: grid;
			// grid-template-rows: var(--component_label_height) auto;
			grid-template-rows: var(--component_label_height) minmax(auto, 100%);
			// grid-column: 1 / span 10; // default width is 100% (10 columns of 10)
			align-content: start;
		}

		// flex config
			/*
			// display: flex;
			flex-wrap: wrap;
			// flex: 0 1 50%; // <'flex-grow'> <'flex-shrink'>? || <'flex-basis'>
			// flex: 1 1 50%; // testing 11-06-2020
			// flex: 1 1 var(--component_width); // 08-09-2021 var defined in :root (vars.less);
			flex: 1 1 auto;
			// height: var(--component_height);  // 08-09-2021 var defined in :root (vars.less);
			align-content: flex-start; // maintain items flow from top to bottom
			*/

		&.modified {
			&:after {
				content: " ";
				display: block;
				width: 100%;
				height: 3px;
				position: absolute;
				left: 0px;
				top: 0px;
				// .fn_add_mask('alert.svg');
				background-color: @color_orange_dedalo;
				z-index: 2;
			}
		}

		&.fullscreen {
			.buttons_fold {
				top: 0.5rem !important;
				position: fixed !important;
			}
		}

		// >.paginator_container {
		// 	min-height: 0.5rem;
		// 	display: grid;
		// 	margin: 0px;
		// 	padding-left: 0.5em;
		// }

		// label
		>.label {
			// background-color: #fffce9;
			padding: 1rem;
			padding-bottom: 0px;
			padding-top: 0.4rem;
			// flex: 1 0 calc(20% - 2em);
			flex: 1 1 100%;

			// color: #7c7c7c;

			letter-spacing: 0.5px;
			text-overflow: ellipsis;
			overflow: hidden;
			white-space: nowrap;
			cursor: default;
			// font-family: Oxygen,"Helvetica Neue",Helvetica,Arial,sans-serif;
			font-weight: 300;
			// color: @color_grey_dark; // #9e9e9e;
			// color: inherit;
		}//end >.label

		// buttons_container
		>.buttons_container {
			background-color: @color_orange_dedalo;
			display: none;
			flex: 0 1 1em;
			// padding: 0; // 0.15em;
			// padding-top: 0.5em;
			position: absolute;
			// top: 0;
			// width: 2em;
			// min-height: 100%;
			// left: 100%;
			z-index: 1;
			// box-shadow: 2px 2px 5px 0 rgba(38, 38, 38, 0.3);
			// border-top-right-radius: 0.25em;
			// border-bottom-right-radius: 0.25em;

			// background: linear-gradient(90deg, rgba(251,148,44,1) 0%, rgba(247,138,28,1) 100%);
			// top: -1px;
			// min-height: calc(100% + 2px);
			// box-shadow: 2px 0 5px 0 rgba(38, 38, 38, 0.3);

			// shadow: light line at top
			// box-shadow: 0px -1px 0px 1px rgb(244 157 70);
			box-shadow: 0px 0px 0px 1px #f49d46;

			right: 0px;
			width: auto;
			// padding: 0.5rem;
			padding: 0px;
			// padding-bottom: 0px;
			// top: -2rem;
			top: -2rem;
			max-height: 2rem;
			border-top-left-radius: 0.25em;
			border-top-right-radius: 0.25em;
			font-size: 1.1rem;

			// &.left {
			// 	left: -2rem;
			// 	box-shadow: -2px 0 5px 0 rgb(38 38 38 / 30%);
			// 	border-radius: unset;
			// 	border-top-left-radius: 0.25em;
			// 	border-bottom-left-radius: 0.25em;
			// }

			.buttons_fold {
				// position: -webkit-sticky;
				// position: sticky;
				// margin: 0;
				// top: 68px;
				// @media screen and (max-width: @width_break_point_1) {
				// 	top: 0.5rem;
				// }
			}

			// buttons inside
			span {
				margin-left: 0.5em;
				margin-bottom: 0.45em;
				margin-top: 0.45rem;

				&:first-child {
					margin-left: 0.75rem;
				}
				&:last-child {
					margin-right: 0.75rem;
				}
			}
		}//end >.buttons_container

		// content_data
		>.content_data {
			color: @color_grey_ultradark; // #9e9e9e;
			height: inherit;
			// background-color: #B9DFF6;
			// flex: 1 0 calc(80% - 2em);
			display: flex;
			// flex: 1 1 auto;
			flex: 1 1 100%;
			flex-wrap: wrap;
			//flex-flow: column;
			align-items: flex-start;
			align-content: flex-start;
			padding: 1em;
			padding-top: 0.5em;
			// overflow: hidden;
		}//end >.content_data


		&.edit, &.search, &.player {
			// grey line left and down of wrapper
			// box-shadow: -1px 1px 0 @color_grey_medium;
			box-shadow: -1px 1px 0 @color_grey_light, inset -1px 1px 0 @color_grey_light;

			// inside column, remove shadow
			.column & {
				&:not(.active) {
					box-shadow: none;
				}
				.content_data {
					// background-color: #f8ffc5;
					padding: 0px;
				}
			}

			@media screen and (max-width: @width_break_point_1) {
				flex: 0 0 100% ;
			}

			>.label {
				height: var(--component_label_height);
				color: #a1a1a1;

				.error& {
					color: white !important;
				}

				// &.move_top {
				// 	margin-top: -2rem;
				// 	// background-color: white;
				// 	background-image: linear-gradient(to bottom, rgb(255 255 255 / 0%), rgb(255 255 255));
				// 	height: 2rem;
				// }
			}

			.button_exit_edit {
				display: none;
				position: absolute;
				// top: 0px;
				// right: -3px;
				top: -6px;
				right: -9px;
				z-index: 3;
			}

			// content data defaults
			>.content_data {
				height: inherit;
				max-height: inherit;

				// former li
				>.content_value {
					height: auto;
					position: relative;
					width: 100%;
				}
			}

			.show_on_active {
				display: none;
			}
			&.active {
				// box-shadow: 3px 5px 8px 1px #c6c6c6;
				// z-index: 1;
				z-index: 3; // 3 allow over portal drag handlers
				// outline: thin solid @color_orange_dedalo;
				box-shadow: -1px 1px 0px @color_orange_dedalo, inset -1px 1px 0px @color_orange_dedalo;
				color: @color_orange_dedalo;
				// overflow. allow set flex-basis (properties width). Remember labels are 'text-overflow: ellipsis'
				overflow: initial; // !important
				// z-index: auto;
				// background-color: rgb(255 252 249);
				&:not(.hilite_element) {
					background-color: lighten(@color_orange_dedalo, 45.1%);
				}

				// >.content_data >.content_value >.show_on_active {
				.show_on_active {
					display: block;
				}

				//transition: background-color 0.3s ease;
				// background-color: @color_grey_medium !important; // rgb(230, 230, 230)
				// background-color: @color_white_dirty !important;
				// background-color: rgb(250 249 249 / 40%) !important;

				// resizable
					// resize: both;
					// overflow: auto;
					// 	flex: unset;
					// 	flex-grow: 1;
					// 	flex-basis: auto;

				@media screen and (max-width: @width_break_point_1) {
					flex: 0 0 calc(100% - 2em) !important;
				}

				>.buttons_container {
					display: block !important;
					white-space: nowrap;
					z-index: 2;

					.button:last-of-type {
						margin-right: 0.75rem;
					}
				}
				>.label {
					// color: @color_orange_dedalo !important;
				}

				&.inside {
					// >.buttons_container {
					// 	left: calc(100% - 1.5rem);
					// }
				}
			}//end &.active
		}//end &.edit

		&.search {
			flex: 1 1 100%;
			overflow: visible; // enable to see the tool-tip
		}

		&.list {

			// wrapper
			// &.component_image, &.component_av, &.component_svg {
			&.media_wrapper {
				display: inline-block;
				padding: 0px;
				// background-color: #ffffff;
				text-align: center;
				height: 100%;
				// min-height: 5em;
				// max-height: 5.5rem;
				@media screen and (max-width: @width_break_point_0) {
					height: auto;
				}

				// image, content_data>img
				>img, >.content_data>img {
					display: inline-block;
					padding: 0px;
					width: 100%;
					height: 100%;
					// min-height: 5em;
					// height: 5em;
					// width: auto;
					// fit image contains
					object-fit: contain;
					object-position: center;
					/*
					// center horizontally.
					// Note that img not creates space because his position is absolute.
					// Use the component wrapper to give the img size
					position: absolute;
					left: 50%;
					transform: translate(-50%);
					*/
					cursor: pointer;
					&:active {
						opacity: 0.33;
					}
				}
			}
		}//end &.list

		// resizable
			// resize: both;
			// overflow: auto;
			// flex: unset;
			// flex-grow: 1;
			// flex-basis: auto;

		&.error {
			transition: background-color 0.3s ease;
			background-color: red !important;
		}

		// inside .section_record.edit context
		//.section_record.edit &, .components_container & { 22
		.section_record &,
		.wrapper_tool &,
		.search_group &,
		dd-modal &, // dd-modal .content &, //  dd-modal .content
		.project_container & { // , .page &
			// color: @color_grey_dark; // #9e9e9e;
			// background-color: rgba(251, 251, 251, 0.70); // #FBFBFB;
			// outline: 1px solid rgba(216, 216, 216, 0.43);

			&.list {
				// padding: 0.5em;
				// outline: none;

				// &.component_image, &.component_portal, &.component_av {
				// 	padding: 0px;
				// }
			}

			>.top {
				display: flex;
				// background-color: bisque;
				flex: 0 1 100%;
				align-items: center;
				justify-content: flex-end;
				padding-top: 0.75em;
				padding-bottom: 0px;

				>select.mono {
					background-color: transparent;
					outline: none;
					-webkit-appearance: none;
					-moz-appearance: none;
					appearance: none;
					text-indent: 1px;
					text-overflow: '';
					/* text-align: right; */
					width: auto;

					pointer-events: none;
				}
			}//end >.top

			>.content_data {

				.list & {
					padding: 0px;
				}

				@media screen and (max-width: @width_break_point_1) {
					flex: 1 1 100%;
				}

				>.q_operator {
					width: 3em;
				}

				.close99 {
					position: absolute;
					// top: 0px;
					// right: -3px;
					top: -6px;
					right: -9px;
					z-index: 3;

					display: none;
				}

				&.vertical {
					flex: 1 1 100%;
					background-color: #a1cccc5c;
					justify-content: center;
					flex-flow: unset;
				}

				//&.nowrap {
				//	flex-wrap: nowrap;
				//	flex-flow: nowrap;
				//}
			}//end >.content_data

			@media screen and (max-width: 1280px) {
				// flex-basis: 100% !important;
			}
		}//end .section_record &, .wrapper_tool &
	}//end .wrapper_component



// tool_container (where is place the tool)
	.tool_container {

	}//end tool_container



// dd-modal
	dd-modal {
		// z-index: 10;
		margin: 0px;
		padding: 0px;
		border: 0px;
		font-size: 100%;
		font: inherit;
		vertical-align: baseline;
		z-index: unset;

		// .modal-content {
		// 	width: 100% !important;
		// }

		@media screen and (max-width: @width_break_point_0) {
			width: 100%;
		}

		.header {
			display: flex;
			padding: 1rem;
			background-color: @color_orange_dedalo;
			color: white;
			font-weight: normal;
			z-index: 2;
			// min-width: 29rem;

			// &.content {
			// 	padding: 1rem;
			// }
			&.label, &.content, >div.label, >span.label {
				font-size: 1.4em;
				line-height: 1.5rem;
				padding-right: 0.5em;

				text-overflow: ellipsis;
				overflow: hidden;
				padding-right: 1rem;
				// width: calc(100% - 2.75rem);

				.button {
					vertical-align: text-bottom;
					margin-right: 0.5em;
					display: inline-block;
				}
			}
			// >span.label {
			// 	padding: 0.5rem;
			// }
			.description {
				font-size: 0.95rem;
				font-weight: 300;
				padding-top: 0.25rem;
			}

			span.mini_modal {
				background-color: #36fd14;
			}

			&.mini {
				// padding: 0.5rem;
				// font-size: 1rem;
				display: flex;
				align-items: center;
				padding: 0px;
				height: 60px;
				width: 100%;

				.close_modal {
					color: black;
				}
				.label {
					width: calc(100% - 1rem);
					overflow: hidden;
					font-size: 15px;
					font-weight: normal;
					line-height: 1.2rem;
					padding: 0.5rem;
					display: flex;
				}
				select, .description {
					display: none;
				}
				.wrapper_tool {
					display: none;
				}
			}
		}

		.header_custom {
			// background-color: #3070d8;
			position: absolute;
			width: 100%;
			padding: 0.5rem;
			display: flex;
			align-items: center;

			span.label {
				padding-left: 0.5rem;
				font-weight: 300;
			}

			select {
				background-color: transparent;
				outline: none;
				color: white;
			}
		}

		.body {

			&.content {
				padding: 1rem;
				padding-top: 1.5rem;
				padding-bottom: 1.5rem;

				>.wrapper_component {
					margin-top: 1rem; // allow to show the component buttons at top when active
				}
			}

			&.content_no_buttons {
				padding: 0.5rem;
				min-width: 34rem;
				min-height: 20rem;

				>.wrapper_component {
					margin: 1rem;
				}
			}

			&.fill_vertical {
				height: calc(70vh - 6rem);
			}

			.block_label {
				padding: 1rem;

				input {
					cursor: pointer;
					margin-right: 0.5rem;
					vertical-align: bottom;
				}
			}

			.block {
				display: block;
				padding: 1rem;
			}


		}

		.iframe_container {
			// background-color: #96FD53;
			padding-top: 17px;
			>iframe {
				height: calc(100vh - 68px);
				// height: 100vh;
				width: 100%;
				// top: 0;
				// left: 0;
				// position: fixed;
				// padding-top: 68px;
				z-index: 1;
				padding: 0px;

				.header_wrapper_list {
					top: 0 !important;
				}
			}
		}

		.footer {
			text-align: right;

			// >*{
			// 	margin: 1em;
			// 	margin-left: 0;
			// }

			button {
				margin-bottom: 1rem;
				margin-left: 0.5rem;


			}
			button:first-of-type {
				margin-left: 0rem;
			}


			&.content {
				padding: 1.5rem;
				padding-top: 0px;
				// padding-top: 1.5rem;
				// padding-bottom: 1.5rem;
				padding-bottom: 0px;
			}

			&.distribute {
				display: flex;
				justify-content: space-between;
				padding-top: 0rem;
			}
		}
	}//end dd-modal



	// dd-modal parts
		// dd-modal::part(header) {
		// 	background-color: pink;
		// 	// font-size: 10px;
		// 	// font-weight: 300;
		// }



// input focus show next item (button remove)
	// input:focus {
	// 	padding-right: 1.75em;

	// 	& ~ .remove.display_none {
	// 		.display_block;
	// 		//position: absolute;
	// 		//right: 0.5em;
	// 		//top: 0.5em;
	// 		//opacity: 1;
	// 		//background-color: #fefefe;
	// 	}
	// }

	// .contenteditable:focus {

	// 	& ~ .display_none.remove {
	// 		.display_block;
	// 		//position: absolute;
	// 		//right: 1em;
	// 		//top: 0.20em;
	// 	}
	// }

	// input:focus ~ .display_none.email_send {
	// 	.display_block;
	// }

	// input:focus ~ .display_none.go_link {
	// 	.display_block;
	// }

	// .display_block {
	// 	display: block !important;
	// }



// disabled_component
	.disabled_component {
		// pointer-events: none !important;

		.content_data.component, .buttons_container, input, .radio_label {
			pointer-events: none !important;
			user-select: none;
		}

		.autocomplete_search_wrapper {
			display: none !important;
		}

		.buttons_container, .button {
			display: none !important;
		}

		input, select {
			outline: none;
		}

		select {
			-webkit-appearance: none;
			-moz-appearance: none;
			text-indent: 1px;
			text-overflow: '';
		}

		&.active {

			// lock icon at top right
			&:after {
				content: " ";
				.fn_build_button('lock.svg', red, 1);
				position: absolute;
				top: 4px;
				right: 4px;
				opacity: 0.5;
				// color: #fd0000;
			}
		}
	}
	// lock is moved to general.less
	// .lock {
	// 	pointer-events: none !important;
	// 	// lock icon at top right
	// 	&:after {
	// 		content: " ";
	// 		.fn_build_button('lock.svg', red, 1);
	// 		position: absolute;
	// 		top: 4px;
	// 		right: 4px;
	// 		opacity: 0.5;
	// 		// color: #fd0000;
	// 	}
	// }



// component_message
	.component_message {
		position: absolute;
		min-height: 3em;
		top: -3em;
		width: 100%;
		//text-align: right;
		color: white;
		//padding-right: 1.5em !important;
		user-select: none;
		line-height: 1.5em;

		// .wrapper_login & {
		// 	position: relative !important;
		// 	top: 0 !important;
		// }

		&.error {
			background-color: rgba(228, 8, 8, 0.90);
		}

		&.warning {
			background-color: #ed6223;
		}

		&.ok {
			background-color: rgba(10, 150, 74, 0.90);
		}

		.text {
			padding: 0.5em;

			//&:last-of-type {
			//	padding-bottom: 0;
			//}
		}

		.close {
			cursor: pointer;
			width: 1em;
			height: 1em;
			text-align: center;
			position: absolute;
			right: 0.25em;
			top: 0px;
			height: 1.5em;
			// font-weight: bold;
			margin: 0px;
		}
	}//end .component_message



// EXPERIMENTAL . singular for checking assignments only
	.singular {

		&.wrapper_component {
			background-color: #F0FBA1 !important;
		}
		&.label {
			background-color: #7CFCDD !important;
			flex: 100% !important;
		}
		&.content_data {
			background-color: #F8CAB7 !important;
			flex: 0 0 90% !important;
		}

		&:after {
			content: "*";
		}
	}



// EXPERIMENTAL section custom test
	.green {
		&[class^="wrapper_"] { // affects all classes starting with 'wrapper_' (wrapper_section, wrapper_component, etc.)
		// &.wrapper_section {
			background-color: #87FA88 !important;
			padding: 1em;
			border-radius: 0.5em;
		}
	}
	.red {
		&.content_data {
			background-color: #ffbcaa !important;
			// background-color: #d35d40 !important;
			// color: white !important;

			.label {
				// color: white !important;
			}
		}
	}



// EXPERIMENTAL component custom test
	.full {
		&.wrapper_component {
			background-color: #35F9E1 !important;
			flex: 100% !important;
		}
	}



// input_tex_area contenteditable
	.input_tex_area {
		width: 100%;
		//height: 100%;
		background-color: #fff;
		margin-right: .25em;
		padding: .5em;
		padding-right: 1em;
		min-height: 8em;
		overflow: auto;
		max-height: 14em;
		word-break: break-word;
		//margin-top: 1.5em;

		// &:after {
		// 	content: " ";
		// 	clear: both;
		// 	width: 100%;
		// 	height: 1em;
		// 	background-color: #F1AA36;
		// }

		&:active {
			//background-color: #BCFEC2;
		}

		&:focus {
			//padding-top: 2em;
			//margin-top: 1.5em;
			//border: 1px solid #1a9af5;
			//outline: 0px solid transparent;
		}
	}// .input_tex_area



// components wrapper modifiers
	// .section_record .wrapper_component,
	// .wrapper_tool .wrapper_component {

	// 	&.width_100 {
	// 		flex: 1 1 100%;
	// 	}
	// }
	&.width_100 {
		flex: 1 1 100% !important;
		width: 100%;
	}


// full screen
	.fullscreen {
		position: fixed !important;
		top: 0px !important;
		left: 0px !important;
		width: 100% !important;
		height: 100% !important;
		z-index: 10 !important;
		max-height: unset !important;
		background-color: #ffffff !important;

		.buttons_container {
			left: unset !important;
			right: 0px !important;
		}

		.content_data {
			padding-right: 1rem !important;
			max-height: unset !important;
			height: 100% !important;

			>ul{
				width: 100% !important;
				>li{
					height: calc(100% - var(--component_label_height)) !important; // 1.75em

					.canvas[resize] {
						height: 100%;
						width: 100%;
						// max-height: 100%;
						// max-width: 100%;
						// object-fit: contain;
						// object-position: center;
					}
				}
			}
		}

		.exit_button {
			position: fixed;
			top: 0.25rem;
			right: 0.5rem;
			width: 1.5rem;
			height: 1.5rem;
			background-color: @color_orange_dedalo;
			z-index: 9999;
			cursor: pointer;
			-webkit-mask-image: url('../../themes/default/icons/full_screen.svg');
					mask-image: url('../../themes/default/icons/full_screen.svg');
			-webkit-mask-size: contain;
				mask-size: contain;
			-webkit-mask-repeat: no-repeat;
					mask-repeat: no-repeat;
			-webkit-mask-position: center;
					mask-position: center;
		}
	}//end .fullscreen



// component buttons show / hide PROPOSAL !
	// former ul
	.content_data {
		>.content_value {
			// default state of buttons here
			.hidden_button {
				display: none;
				// user click force show to prevents hide the button again
				&:active {
					display: inline-block;
				}
			}

			// if any li inside element is focused, show hidden buttons
			&:focus-within {
				.hidden_button {
					display: inline-block;
				}
			}
		}
	}//end .content_data



// json_editor
	.jsoneditor {
		resize: vertical;
		overflow: hidden;

		// thematize
		&.jsoneditor-mode-code {
			border: thin solid #c0c0c0;
		}

		.ace-jsoneditor .ace_marker-layer .ace_active-line {
			background-color: #f2f2f2;
		}

		>.jsoneditor-menu {
			background-color: #949494;
			border-bottom: 1px solid #838383;
			display: table;
		}

		>.jsoneditor-menu a.jsoneditor-poweredBy {
			top: unset;
			bottom: 0px;
			padding: 5px;
			color: #b3b3b3;
		}

		&.isDirty {
			border: 1px solid @color_danger !important;

			>.jsoneditor-menu {
				background-color: @color_danger !important;
			}

		}
	}//end .jsoneditor



// json-container. Is the JSON data viewer used to show fold-able data like
// server messages in area_development widgets
	.json-container {
		background-color: #f8fcff;
		margin: 0px;
		margin-top: 1em;
		padding: 0.5rem;
		font-size: 14px;
		border-radius: 3px;

		.json-key {
			word-break: initial;
		}
	}



// components_list_container (used in search and tool_export)
	.components_list_container {
		display: flex;
		width: fit-content;
		border-right: 1px solid @color_grey_dark;
		font-size: 1em;
		background-color: @color_white_dirty;


		ul {
			display: block;
			position: relative;
			// width: fit-content;

			// Standard section container (receive all json elements inside)
			&.list_container {
				// background-color: #e27b5e;
			}
			&.target_list_container {
				display: flex;
				border-left: 1px solid @color_grey_dark;
			}


			li {
				position: relative;
				line-height: 1em;
				padding: 0.307rem;
				display: block;
				// // padding: 4px;
				// // padding-right: 1em;
				// border-right: 1px solid #a5a5a5;
				user-select: none;
				// display: grid;


				// Section label bar
				&.section_bar_label {
					display: block;
					background-color: #575a5c;
					color: #ffffff;
					// font-family: "Oxygen-light";
					// border-right: 1px solid #a5a5a5;
					// line-height: 1em;
					// Avoid click events affect here (received with :after)
					pointer-events: none;

					&:after {
						content: 'X';
						display: block;
						// background-color: #a0a0a0;
						float: right;
						width: 1em;
						text-align: center;
						//border-radius: 50%;
						//line-height: 15px;
						//position: relative;
						//top: 2px;
						cursor: pointer;
						// Allow receive here the click button of real dom element
						pointer-events: all;
					}

					&.close_hide:after {
						display: none;
					}

				}//end section_bar_label

				// section_group_label
				&.section_group_label {
					background-color: @color_grey_dark; //#575A5C;
					color: #ffffff;
				}

				// component_label
				&.component_label {
					background-color: #ffffff;
					//background-color: rgba(251, 251, 251, 0.48);
					border-bottom: 0.5px solid #666;

					// // truncate text
					// 	>* {
						// display: block;
						// width: 100%;
						padding-right: 2.0em;
						white-space: nowrap;
						overflow: hidden;
						text-overflow: ellipsis;
						// line-height: inherit;
						// height: inherit;
						// background-color: #30d305 !important;
					// 	}

					&:hover {
						background-color: @color_orange_dedalo !important;
						color: #ffffff;
					}
					&:active {
						//background-color: initial;
						//color: initial;
						opacity: 0.6;
					}

					// // truncate text
					// >* {
						// display: grid;
						// width: 99.99%;
						// padding-right: 1em;
						// white-space: nowrap;
						// overflow: hidden;
						// text-overflow: ellipsis;
						// // line-height: inherit;
						// height: inherit;
						// background-color: #30d305 !important;
					// }

					@background-top: 5px;

					// Drag-gable background svg
					&.element_draggable {
						cursor: move;
						// background: url('../../themes/default/draggable.svg');
						background-image: url('../../themes/default/draggable.svg');
						background-color: rgba(0, 0, 0, 0);
						background-position-x: 0%;
						background-position-y: 0%;
						background-size: auto auto;
						background-position: right 5px bottom @background-top;
						background-repeat: no-repeat;
						background-size: 12px;
					}

					// has_subquery
					&.has_subquery {
						// background-color: #29ae03;
						cursor: pointer;
						background-position: right 1em bottom @background-top;

						// Arrow
						&:after {
							content: ' ';
							display: block;
							pointer-events: none;
							position: absolute;
							// background: url('../../themes/default/icons/play.svg');
							background-image: url('../../themes/default/icons/play.svg');
							background-repeat: no-repeat;
							background-position: center;
							background-size: 0.55em;
							width: 1em;
							height: 1em;
							right: 0px;
							// top: 3px;
							top: 0.308rem;
							cursor: pointer;
						}

						&.active {
							background-color: @color_orange_dedalo !important;
							//font-weight: bold;
							// border-right: 1px solid @selected_color;
							// color: #ffffff;

							&:after {
								// border-left: 5px solid #ffffff;
							}
						}
					}//end li.component_label.has_subquery


				}//end component_label

			}//end li
		}//end ul.components_list_container
	}//end .components_list_container



// id_column
	/*
	.id_column {
		//display: flex;
		//flex-wrap: wrap;
		//align-self: flex-start;
		display: table;
		padding-left: 0.25em !important;
		padding-right: 0.5em !important;

		@height_line : 1.2em;

		>* {
			flex: 1 1 100%;
			display: flex;
			align-items: center;
			justify-content: flex-end;
			height: @height_line;
		}

		a {
			background-size: cover;
			background-repeat: no-repeat;
			background-position: center;
			width: @height_line + 0.1;
			height: @height_line;
			margin-left: 0.3em;
			opacity: 0.7;
		}


		>.edit_line {
			//background-color: #CDFFA9;
			//flex-direction: row-reverse;

			>span {
				display: inline-block;
				font-size: @height_line + 0.02;
				//height: @height_line;
			}

			>a {
				//.icon_svg;
				background-image: url(../../themes/default/icons/edit_mini.svg);
			}
		}

		>.delete_line {
			//background-color: #FA913B;
			//flex-direction: row-reverse;
			margin-top: 0.5em;

			>a {
				//.icon_svg;
				background-image: url(../../themes/default/icons/trash-o.svg);
			}
		}
	}//end id_column
	*/



	/*
		.tooltip_toggle {
		  cursor: pointer;
		  position: relative;
		  z-index: 9999999999999999999;
		}

		.tooltip_toggle::before {
		  position: absolute;
		  top: -80px;
		  left: -80px;
		  background-color: green;
		  border-radius: 5px;
		  color: #fff;
		  content: attr(data-tooltip);
		  padding: 1rem;
		  text-transform: none;
		  -webkit-transition: all 0.5s ease;
		  transition: all 0.5s ease;
		  width: 15em;
		}

		.tooltip_toggle::after {
		  position: absolute;
		  top: -12px;
		  left: 9px;
		  border-left: 5px solid transparent;
		  border-right: 5px solid transparent;
		  border-top: 5px solid green;
		  content: " ";
		  font-size: 0;
		  line-height: 0;
		  margin-left: -5px;
		  width: 0;
		}

		.tooltip_toggle::before,
		.tooltip_toggle::after {
		  color: #efefef;
		  font-family: monospace;
		  font-size: 16px;
		  opacity: 0;
		  pointer-events: none;
		  text-align: center;
		}

		.tooltip_toggle:hover::before,
		.tooltip_toggle:hover::after {
		  opacity: 1;
		  -webkit-transition: all 0.75s ease;
		  transition: all 0.75s ease;
		}
		*/



.bg_warning {
	// background-color: @color_orange_dedalo ;
	background-color: #ffe9e9;
	border: 1px dashed #ef9b9b;
	// overflow: auto;
	background-image: url('../../themes/default/dedalo_logo.svg');
	background-size: 5rem;
	background-repeat: space;
}



// media components base CSS unified
.media_wrapper.edit.wrapper_component {

	// resize vertical
		// resize: vertical;
		// overflow: hidden;

	// shared quality_selector
	.quality_selector {
		position: absolute;
		top: 0rem;
		right: 1rem;
		margin: 0px;
		padding: 0px;
		padding-left: 0.33rem;
		padding-right: 0.33rem;
		height: 1.25rem;
		max-width: 5rem;
		font-size: 0.9rem;
		border: 0px;
		outline: none;
		border-radius: 4px;

		z-index: 1;
		box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;

		.fullscreen& {
			width: auto !important;
		}
	}

	.media_content_data {
		// Note that height is always the media min height (392px)
		// (!) Do not use max o min height here to prevent to affect canvas reference size
			// height: var(--media_min_height);
			// display: table;

			// justify-content: center;
			// max-height: var(--media_max_height);
			// min-height: var(--media_min_height);

			// @media screen and (max-width: @width_break_point_1) {
			// 	min-height: unset;
			// }
		display: contents;
	}

	.media_content_value {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		// width: 100%;
		height: var(--media_min_height);
		// min-height: var(--media_min_height); // 404px;

		// with margin option
			margin: 1rem;
			margin-top: 0.5rem;
			width: calc(100% - 2rem);

		// without margin option
			// margin-top: 0.5rem;

		// resize vertical
			resize: vertical;
			overflow: hidden;

		@media screen and (max-width: @width_break_point_1) {
			height: unset;
			max-height: 404px;
		}
	}

	&.fullscreen {
		.media_content_value {
			height: unset;
		}
	}
}
.media_wrapper.list.wrapper_component {
	&.view_default {
		height: var(--view_line_height); // 5rem;
		@media screen and (max-width: @width_break_point_0) {
			background-color: unset !important;
		}
	}
}
// prevents component_3d an other media to loose the necessary height in the
// upload window preview
.preview_component_container {
	.media_wrapper.edit.wrapper_component .media_content_value  {
		@media screen and (max-width: @width_break_point_1) {
			height: var(--media_min_height);
		}
	}
}
// affects all media components span wrapper (3d,av,image,pdf,svg)
.media.view_text {
	height: var(--view_text_height); //	2rem;
	vertical-align: middle;
}



.page_error_container {
	padding: 4rem;
	line-height: 2.5rem;
	// position: relative;

	// only apply to page error, is not generic
	&.raspa_error {
		// background Raspa error
		 &:after {
			content: ' ';
			background-image: url('../../themes/default/raspa_404.jpg');
			background-size: cover;
			background-repeat: no-repeat;
			height: 100%;
			width: 100%;
			position: absolute;
			left: 0px;
			top: 0px;
			min-height: 100vh;
			overflow: hidden;
			opacity: 0.3;
			z-index: -1;

			@media screen and (max-width: @width_break_point_0) {
				background-position: 35%;
			}
		}
	}

	&.not_logged_error {
		 &:after {
			content: ' ';
			opacity: 0.3;
		}
	}


	h1 {
		font-size: 1.7rem;
		margin: 0.67em 0;
		margin-bottom: 0px;
		color: @color_grey_darken;
		font-weight: 200;
	}

	.more_info {
		margin-top: 1.5rem;
	}

	.link {
		display: block;
	}

	// overlay
		// &:after {
		// 	content: ' ';
		// 	height: 100%;
		// 	width: 100%;
		// 	position: absolute;
		// 	background-color: orange;
		// 	position: absolute;
		// 	top: 0px;
		// 	left: 0px;
		// 	background-color: rgb(255 255 255 / 39%);
		// }

	// >* {
	// 	z-index: 3;
	// }

	// &:before {
	// 	content: ' ';
	// 	// background-image: url('../../themes/default/dedalo_icon_big.png');

	// 	background-repeat: no-repeat;
	// 	background-position: 0 top;
	// 	// background-size: 527px 1024px;
	// 	position: absolute;
	// 	width: 100%;
	// 	height: 100%;
	// 	min-height: 1024px;
	// 	z-index: -1;
	// 	opacity: 0.5;
	// 	-moz-transform: scaleX(-1);
	// 	-o-transform: scaleX(-1);
	// 	-webkit-transform: scaleX(-1);
	// 	transform: scaleX(-1);
	// }

	>.icon_dedalo {
		height: 7rem;
	}

	>.server_response_error {

	}
}
