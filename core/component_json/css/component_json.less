/**
* component_json
*
* Included from main.less file
*/
.component_json {

	// shared button save
	// button save
	.button_save {
		position: absolute;
		right: 0px;
		top: 1px;
		z-index: 1;
		height: 35px;
		margin: 0;
		background-color: transparent;
		border-color: transparent;
	}//end .button_save

	//.edit
	&.edit {

		>.content_data {
			// Note that height is always the media min height (392px)
			// (!) Do not use max o min height here to prevent to affect canvas reference size
			height: var(--media_min_height);
			display: table;

			justify-content: center;
			max-height: var(--media_max_height);
			min-height: var(--media_min_height);
			overflow: hidden;

			@media screen and (max-width: @width_break_point_1) {
				min-height: unset;
			}

			// editor container
			>.content_value {
				width: 100%;
				height: 100%;
				position: relative;
				z-index: 0;
				min-height: var(--media_min_height); // 404px;
				display: table;

				>.button_save {

				}

				>.jsoneditor {
					display: table;
					width: 100%;
					height: 100%;
					min-height: var(--media_min_height); // 404px;
				}
			}
		}
	}

	&.list {

		>span {
			word-break: break-all;
			white-space: pre-wrap;
		}
	}

	&.search {
		>.content_data {

			// input q_operator
			>.q_operator {
				width: 3rem;
				text-align: center;
				margin-right: 0.5rem;
			}

			>.content_value {
				width: calc(100% - 3.5rem);

				// search input value
				>.input_value {
					width: 100%;
				}
			}

		}
	}

	&.view_default {

	}

	&.view_line {
		display: block;
		>.content_data {
			min-height: unset;
		}
	}


	&.view_print {
		.content_value {
			.value {
				background-color: transparent;
			}
		}
	}

	&.view_collapse {
		cursor: n-resize;
		line-height: 1.1rem;

		&:hover {
			background-color: #faf7df;
		}

		&.collapsed {
			cursor: s-resize;
			height: 2.5rem;
			overflow: hidden;
		}
	}

}//end .component_json
