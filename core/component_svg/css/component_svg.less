/**
* component_svg
*
* Included from main.less file
*/
.component_svg {

	&.edit {
		// height: @media_min_height;

		>.content_data {
			// Note that height is always the media min height (392px)
			// (!) Do not use max o min height here to prevent to affect canvas reference size
			height: @media_min_height;
			display: table;

			justify-content: center;
			max-height: @media_max_height;
			min-height: @media_min_height;

			@media screen and (max-width: @width_break_point_1) {
				min-height: unset;
			}

			// sqg container
			>.content_value {
				display: flex;
				justify-content: center;
				width: 100%;
				height: inherit;
				// min-height: @media_min_height; // 404px;

				resize: vertical;
				overflow: hidden;

				@media screen and (max-width: @width_break_point_1) {
					height: unset;
					max-height: 404px;
				}

				// img
				>.image.svg_element {
					// background-color: #f5f5f5;
					padding: 0px;
					// height: 100%;
					// max-height: 100%;
					// max-width: 100%;
					height: 100%;
					max-height: 100%;
					max-width: 100%;
					object-fit: contain;
					object-position: center;
				}
			}
		}
	}

	&.list {
		img {
			height: @view_line_height;
		}
	}

	&.view_default {

	}//end .view_default

	&.view_line {

		&.list {
			height: @view_text_height; // 1.5rem
		}
		&.edit {
			max-height: 15rem;
			display: inline-block;
			img {
				height: 100%;
				max-height: 15rem;
				max-width: 100%;
				object-fit: contain;
				object-position: center;
			}
		}
	}

	// with suffix _mini like 'component_text_area_mini'
	&_mini {
		// prevent index images height exceed text height
		img {
			height: @view_text_height; // 1.5rem
		}
	}

	&.view_text {
		height: @view_text_height; // 1.5rem
	}

	// img .svg.view_text
	.svg.view_text {
		height: @view_text_height; // 1.5rem
	}
}//end .component_svg
