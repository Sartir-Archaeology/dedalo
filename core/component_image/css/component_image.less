/**
* component_image
*
* Included from main.less file
*/
.component_image {


	&.disabled_component {
		.content_data.component {
			pointer-events: unset !important;
		}
	}

	&.edit {

		&.fullscreen {

		}

		>.content_data {

			// moved to layout.less.media_wrapper.edit
				// // Note that height is always the media min height (392px)
				// // (!) Do not use max o min height here to prevent to affect canvas reference size
				// height: var(--media_min_height);
				// display: table;

				// justify-content: center;
				// max-height: var(--media_max_height);
				// min-height: var(--media_min_height);
				// overflow: hidden;

				// @media screen and (max-width: @width_break_point_1) {
				// 	min-height: unset;
				// }

			// image container
			>.content_value {

				.image_container {
					// visibility: hidden;
					height: 100%;
					// height: auto;
					max-height: 100%;
					// width: 100%;
					width: 100%;
					position: relative;
					display: flex;
					justify-content: center;

					.img  {
						// visibility: hidden;
						height: 100%;
						// height: auto;
						max-height: 100%;
						// width: 100%;
						max-width: 100%;
						object-fit: contain;

						// on focus adds a soft shadow and outline
						&:focus {
							.hilite_mixin(-1px);
						}

						body {
							display: flex;
							overflow: hidden;
							justify-content: center;
						}
					}

					// object image
					.image  {
						// visibility: hidden;
						height: 100%;
						// height: auto;
						max-height: 100%;
						// width: 100%;
						max-width: 100%;
						object-fit: contain;

						// on focus adds a soft shadow and outline
						&:focus {
							.hilite_mixin(-1px);
						}

						// body {
						// 	display: flex;
						// 	overflow: hidden;
						// 	justify-content: center;
						// }
					}
				}
				// moved to layout.less.media_wrapper.edit
					// display: flex;
					// align-items: center;
					// justify-content: center;
					// width: 100%;
					// height: inherit;
					// background-color: @color_grey_light;
					// text-align: center;
					// min-height: var(--media_min_height); // 404px;

					// resize: vertical;
					// overflow: hidden;


				/*
				canvas {
					background-color: #f5f5f5;
					max-width: 100%;
				}
				.canvas[resize] {
					height: 100%;
					// testing
					// max-height: 100%;
					// max-width: 100%;

					// width: 100%;
					// max-height: 100%;
					// max-width: 100%;
					// object-fit: contain;
					// object-position: center;
				}
				*/
			}//end .content_value

		}//end .content_data

		>.buttons_container {
			white-space: unset !important;

			// button vector_editor
			.vector_editor {
				.fn_add_mask('vector_editor.svg');
			}
		}//end .buttons_container
	}

	&.list {
		img {
			cursor: zoom-in;
			height: 100%;
			width: 100%;
			object-fit: contain;
		}
	}

	&.view_default {
		&.list {
			height: var(--view_line_height); // 5rem;
		}
	}

	&.view_line {
		display: inline-block;

		&.list {
			height: var(--view_line_height); // 5rem;
			// height: 4rem;
    		width: 6rem;
    		min-width: 6rem;
		}
	}

	&.view_viewer {
		position: fixed;
		left: 0px;
		top: 0px;
		width: 100%;
		height: 100%;

		// image
		.viewer_image {
			position: fixed;
			left: 0px;
			top: 0px;

			&.fit {
				width: 100%;
				height: 100%;
				object-fit: contain;
			}
		}

		// button download
		.download {
			position: fixed;
			right: 10px;
			bottom: 10px;
			z-index: 2;
			width: 3em;
			height: 3em;
			padding: unset;
			margin: unset;

			&:before {
				height: 1.5em;
				width: 1.5em;
				margin : unset;
			}
		}
	}

	&.view_mosaic {

		&.list {
			>.content_data {
				// display: inherit;
				// display: -webkit-inline-box; // Safari only
				display: block;
				width: 100%;
				height: 100%;
				padding: 0;
				margin: 0;
			}
		}
	}

	// with suffix _mini like 'component_date_mini'
	&_mini {
		display: inline-block;
		vertical-align: middle;
		// margin-top: -0.4rem;
		// margin-bottom: -0.4rem;

		img {
			// height: 100%;
			height: 2rem;
		}
	}

	&.view_text {

	}

}//end .component_image

@import (once) './vector_editor_tools';
