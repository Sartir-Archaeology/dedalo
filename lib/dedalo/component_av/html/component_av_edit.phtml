<?php

	# VISUALIZADOR HTML	


	# ELEMENTOS
	if(!isset ($ar_css['css_wrap_av']))			$ar_css['css_wrap_av']='';
	
	
	print "\n<!-- AV [tipo:$tipo section_id_matrix:$parent] $label -->";
	print "\n<div class=\"css_wrap_av wrap_component {$ar_css['css_wrap_av']}\"
	id=\"{$id_wrapper}\"
	data-tipo=\"{$tipo}\"
	data-lang=\"{$lang}\"
	data-parent=\"{$parent}\"
	data-section_tipo=\"{$section_tipo}\"	
	data-modo=\"{$modo}\"
	data-dato=\"{$valor}\"
	data-component_name=\"{$component_name}\"
	data-component_info='{$component_info}' >";
	
		
		# ETIQUETA (LABEL)
		$html_label = component_common_draw::draw_label($this);
		
		# CONTENIDO (INPUT)
		$html_contenido = '';
		switch($permissions) {
				
			case 0 :	$html_contenido .= "";
						break;
							
			case ($permissions>=1) :
			
						# POSTERFRAME

						$open_tool_default='';
						$add_class='';

						$av_file_exits = file_exists($this->get_video_path());
						$av_subtitles_file_exits = file_exists($this->get_subtitles_path());
	
						# A NOT EXISTS. PLACE DEDALO IMAGE WITH LINK TO DEFAULT TOOL
						# dump( component_security_tools::is_authorized_tool_for_logged_user('open_tool_upload'), ' is_authorized_tool_for_logged_user($tool_name) ++ '.to_string());
						if ( component_security_tools::is_authorized_tool_for_logged_user('tool_upload') &&
							 !$av_file_exits &&
							 !$this->get_original_file_path(DEDALO_AV_QUALITY_ORIGINAL)
							) {
							$open_tool_default ="data-video_id=\"$video_id\"
							data-quality=\"".DEDALO_AV_QUALITY_ORIGINAL."\"
							data-aditional_path=\"$aditional_path\"
							data-initial_media_path=\"$initial_media_path\"
							data-tipo=\"$tipo\"
							data-parent=\"$parent\"
							data-section_tipo=\"$section_tipo\"
							onclick=\"tool_common.open_tool_upload(this)\" 
							title=\"Upload file in original quality\" ";

							$add_class = 'no_file';
						}

						# PLAYER
						#$html_contenido .= $player_html	; # Rendered in player mode
						# PLAYER
						$html_contenido .= "\n<div class=\"css_posterframe_wrap $add_class\" $open_tool_default >";


						if ($av_file_exits) {
							
							# VIDEO
							$html_contenido .= "<video class=\"css_av_video\" style=\"height:404px;\" onclick=\"component_av.video_play_toggle(this)\"
							preload=\"none\"
							controls=\"controls\"
							poster=\"$posterframe_url\"
							onerror=\"component_av.failed(event)\"
							id=\"{$player_id}\"
							data-tipo=\"{$tipo}\"
							data-section_tipo=\"{$section_tipo}\"
							data-parent=\"{$parent}\"
							data-video_id=\"{$video_id}\"
							>";

								$html_contenido .= "\n <source id=\"video_mp4_{$tipo}\" src=\"$video_url\" type=\"video/mp4\" onerror=\"alert('Sorry. Unplayable media')\" >";	//onerror=\"alert('Sorry. Unplayable media')\" 
								
								# FALLBACK IMG (no html5 codec video support)
								$html_contenido .= "\n <img src=\"$posterframe_url\" class=\"av_posterframe\" alt=\"Posterframe\" title=\"No video playback capabilities\" />";
							
								#
								# VTT SUBTITLES TRACK
								if($av_subtitles_file_exits){
									$html_contenido .= "\n<track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"$subtitles_url\" default>";
								}

							$html_contenido .= "\n</video>";


						}else{
							
							# POSTERFRAME (When video file not exists)							
							$html_contenido .= "\n <img class=\"av_posterframe\" src=\"$posterframe_url\"
							data-video_id=\"$video_id\"
							/>";							
						}
							



							
						$html_contenido .= "\n</div><!-- /css_posterframe_wrap -->";

						# VERSIONS
						#$html_contenido .= $versions_html ;												
		}

		# Prepare content to show in page
		tools::prepare_content($html_contenido);	
		

		# PRINT HTML
		print $html_label;
		print $html_contenido;
	
	
	print "\n</div><!-- /css_wrap_av AV [tipo:$tipo section_id_matrix:$parent] $label -->\n"; //wrap


?>