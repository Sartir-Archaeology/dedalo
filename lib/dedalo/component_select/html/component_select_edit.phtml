<?php

	# VISUALIZADOR HTML

	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'in');

	print "<div class=\"wrap_component css_wrap_select wrap_component_{$tipo}\" id=\"{$id_wrapper}\" ";
	print "data-tipo=\"{$tipo}\" ";
	print "data-lang=\"{$lang}\" ";
	print "data-parent=\"{$parent}\" ";
	print "data-section_tipo=\"{$section_tipo}\" ";
	print "data-referenced_section_tipo=\"{$referenced_tipo}\" ";
	print "data-modo=\"{$modo}\" ";
	print "data-from_modo=\"{$from_modo}\" ";
	print "data-dato='{$dato_string}' ";
	print "data-component_name=\"{$component_name}\" ";
	print "data-component_info='{$component_info}' ";
	print "data-relation_type='{$relation_type}' ";
	print ">";

	# ETIQUETA (LABEL)
	$html_label = component_common_draw::draw_label($this);

	# CONTENIDO (INPUT)
	$html_content = '';
	switch($permissions) {

		case 0 :
				$html_content .= "";
				break;

		case 1 :
				$valor = $this->get_valor();
				$html_content .= $valor;
				break;

		case 2 :
		case 3 :
			if($modo !== 'edit_in_list'){
				if($from_modo !== 'edit' ){
					$html_content .= "<div class=\"css_select_button_close\" onclick=\"component_common.change_mode_component(this, 'edit', '$from_modo')\"></div>";
				}	
			}
			
			#
			# CONTEXT
			# Set as disabled on time machine context 
			$disabled = (isset($context->context_name) && $context->context_name=='tool_time_machine') ? 'disabled="disabled"' : '';

			$html_content .= "<select class=\"css_select\" ";
			$html_content .= "onchange=\"component_select.Save(this)\" ";
			$html_content .= "onfocus=\"component_common.select_wrap(document.getElementById('$id_wrapper'));\" ";
			$html_content .= "name=\"{$input_name}\" ";
			$html_content .= "data-role=\"component_select_selector\" ";
			$html_content .= "data-tipo=\"{$tipo}\" ";
			$html_content .= "data-lang=\"{$lang}\" ";
			$html_content .= "data-section_tipo=\"{$section_tipo}\" ";
			$html_content .= "data-parent=\"{$parent}\" ";
			$html_content .= "title=\"$html_title\" ";
			$html_content .= "$disabled ";
			$html_content .= "tabindex=\"1\" ";
			$html_content .= ">";
				
				# Empty option
				$html_content .= "<option value=\"\"></option>";
	
				# Available options
				foreach ($ar_list_of_values->result as $key => $item) {

					$label   = (string)$item->label;
					
					$locator = new stdClass();
						$locator->section_tipo 			= $item->value->section_tipo;
						$locator->section_id 			= $item->value->section_id;
						$locator->type 					= DEDALO_RELATION_TYPE_LINK;
						$locator->from_component_tipo 	= $tipo;


					$founded  = locator::in_array_locator( $locator, $ar_locator=$dato, $ar_properties=array('section_id','section_tipo') );
					$selected = $founded ? 'selected' : '';

					$html_content .= '<option value=\''.json_encode($item->value).'\' '.$selected.'>';
					$html_content .= $label;
					$html_content .= '</option>';
				}

			$html_content .= "</select>";



			# Button open section referenced
			#$html_content .= "<input type=\"button\" value=\"Source\" class=\"css_button_generic\" onclick=\"component_select.open_section(this)\" />";
			$html_content .= "<a href=\"javascript:;\" class=\"icon_bs link edit_select edit_hidden\" onclick=\"component_select.open_section(this)\"></a>";


			// components_controller
				if( isset($propiedades->controller) && $propiedades->controller===true ){
					$html_content .= "<input class=\"components_controller\" value='".json_encode($controller_data)."'>";
				}


			if(SHOW_DEBUG===true) {
				$html_content .= "<div class=\"debug_info notes\">".json_encode( $dato )."</div>";				
				#$html_content .= " <span class=\"css_span_debugger\" id=\"debugger_{$tipo}\" >{$debugger}</span>";
				#$html_content .= '<pre  style="position: absolute;" >'.json_encode($controller_data, JSON_PRETTY_PRINT).'</pre>';
			}

			#
			# JS Init component
			$html_content .= '<script>';
			# Init component
			$init_options = new stdClass();
				$init_options->component_name 	= $component_name;
				$init_options->id_wrapper 		= $id_wrapper;
				$init_options->uid 				= $identificador_unico;
				$init_options->mandatory 		= $mandatory;
			$html_content .= 'component_common.init('.json_encode($init_options).');';
			$html_content .= '</script>';
			break;
	}

	# Prepare content to show in page
	tools::prepare_content($html_content);


	# PRINT HTML
	if($modo!=='edit_in_list'){
		print $html_label;
	}
	print $html_content;

	#if(SHOW_DEBUG) {
	#	echo $ar_list_of_values->debug;
	#}

	print "</div>"; //wrap



	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'out');


?>