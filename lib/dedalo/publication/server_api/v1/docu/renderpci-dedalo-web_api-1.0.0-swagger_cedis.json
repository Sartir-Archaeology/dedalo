{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Dédalo Web REST API",
    "description": "Build Public Dédalo data for publication",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "name": "Aditional Dédalo publication info",
      "url": "http://dedalo4.antropolis.net/dedalo/lib/dedalo/publication/server_api/v1/docu/API_docu_v1.pdf"
    }
  },
  "host": "dedalo.cedis.fu-berlin.de",
  "schemes": [
    "http"
  ],
  "basePath": "/dedalo/lib/dedalo/publication/server_api/v1/json",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/tables_info": {
      "get": {
        "description": "Get complete info about current disposable tables and columns.\n",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          }
        ],
        "tags": [
          "Info"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "List of tables available in DB",
              "type": "object"
            }
          }
        }
      }
    },
    "/records": {
      "post": {
        "description": "Search records with current params in requested table.\n",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "table",
            "in": "query",
            "type": "string",
            "default": "interview"
          },
          {
            "name": "ar_fields",
            "in": "query",
            "description": "Comma separated list of required columns in table.",
            "required": false,
            "type": "string",
            "format": "json"
          },
          {
            "name": "section_id",
            "in": "query",
            "description": "Filter by specific section_id. Like 1",
            "required": false,
            "type": "number",
            "format": "integer"
          },
          {
            "name": "sql_fullselect",
            "in": "query",
            "description": "Custom sql select for builds query. Replaces any other columns selection option",
            "required": false,
            "type": "string"
          },
          {
            "name": "sql_filter",
            "in": "query",
            "description": "Custom query added to standar filter",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current api server default lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Custom order for result.Set null for no sort",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximun records returned in query. 0 for no limit",
            "required": false,
            "type": "number",
            "format": "int",
            "default": 10
          },
          {
            "name": "group",
            "in": "query",
            "description": "Custom group query for sql like 'lang'",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Custom records offset for query",
            "required": false,
            "type": "number",
            "format": "int"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Activates total records counter for pagination",
            "required": false,
            "type": "boolean",
            "format": "bool"
          },
          {
            "name": "resolve_portal",
            "in": "query",
            "description": "Activates automatic resolution of portals option. Default is false",
            "required": false,
            "type": "boolean",
            "format": "bool"
          }
        ],
        "tags": [
          "Records"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "title": "Array of records",
                  "type": "array"
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/reel_terms": {
      "post": {
        "description": "Resolve all terms used in the indexation of the given reel (audiovisual record).",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, API server settings default lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "av_section_id",
            "in": "query",
            "description": "audiovisual section id",
            "type": "integer",
            "format": "int"
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "title": "Array of records",
                  "type": "array"
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/fragment_from_index_locator": {
      "post": {
        "summary": "Get records from DDBB",
        "description": "Calculate all fragaments indexed with this locator.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "index_locator",
            "in": "query",
            "description": "locator object encoded as json like {\"section_tipo\":\"rsc167\",\"section_id\":\"1\",\"tag_id\":\"1\"}",
            "required": true,
            "type": "string",
            "default": "{\"section_tipo\":\"rsc167\",\"section_id\":\"1\",\"tag_id\":\"1\"}"
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "title": "Array of records",
                  "type": "array"
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/thesaurus_root_list": {
      "post": {
        "description": "Return a array of 'ts_term' objects with resolved data. You can use only the data or (in PHP) manage 'ts_term' objects to build custom html.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "table",
            "in": "query",
            "description": "Optional comma separated names of thesaurus tables. If undefined, server config thesaurus tables are used",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "exclude_tld",
            "in": "query",
            "description": "Optional comma separated list of tld to exclude like 'xx,rt'",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of records",
              "type": "array",
              "items": {
                "title": "Records info",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "single": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/thesaurus_random_term": {
      "post": {
        "description": "Return a random term from thesaurus tables",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "table",
            "in": "query",
            "description": "Optional comma separated names of thesaurus tables. If undefined, server config thesaurus tables are used",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "exclude_tld",
            "in": "query",
            "description": "Optional comma separated list of tld to exclude like 'xx,rt'",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of records",
              "type": "array",
              "items": {
                "title": "Records info",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "single": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/thesaurus_search": {
      "post": {
        "description": "Execute a search against thesaurus tables",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "table",
            "in": "query",
            "description": "Optional comma separated names of thesaurus tables. If undefined, server config thesaurus tables are used",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "exclude_tld",
            "in": "query",
            "description": "Optional comma separated list of tld to exclude like 'xx,rt'",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "string to search in database. Minimun 3 chars for full text search",
            "required": true,
            "type": "string",
            "default": "term"
          },
          {
            "name": "rows_per_page",
            "in": "query",
            "description": "Pagination preference. One row per page is the default value",
            "required": false,
            "type": "integer",
            "format": "int"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Pagination preference. Current page number. One is default",
            "required": false,
            "type": "integer",
            "format": "int"
          },
          {
            "name": "tree_root",
            "in": "query",
            "description": "Defines first element from build the hierarchy tree when show the reults. Accepted values first_parent | last_parent . Default is last_parent",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of records",
              "type": "array",
              "items": {
                "title": "Records info",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "single": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/thesaurus_autocomplete": {
      "post": {
        "description": "Search string in database (begings with $q) and get array of max 25 records",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "table",
            "in": "query",
            "description": "Optional comma separated names of thesaurus tables. If undefined, server config thesaurus tables are used",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "string to search in database. Minimun 3 chars for full text search",
            "required": true,
            "type": "string",
            "default": "term"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of records returned. Undefined uses default of 25",
            "type": "integer",
            "format": "int"
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of records",
              "type": "array",
              "items": {
                "title": "Records info",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "single": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/thesaurus_term": {
      "post": {
        "description": "Resolve a ts_term from term_id",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "ar_term_id",
            "in": "query",
            "description": "Comma separated list of one or various term_id like 'ts1_1,ts1_2'",
            "required": true,
            "type": "string",
            "default": "ts1_1"
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/thesaurus_indexation_node": {
      "post": {
        "description": "Builds a indexation_node data object",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "term_id",
            "in": "query",
            "description": "Term id like 'ts1_1'",
            "type": "string",
            "required": true,
            "default": "ts1_1"
          },
          {
            "name": "ar_locators",
            "in": "query",
            "description": "json encoded array of locators like [{locator1},{locator2}]",
            "type": "string",
            "required": true,
            "default": "[{\"type\":\"dd96\",\"tag_id\":\"1\",\"section_id\":\"1\",\"section_tipo\":\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"1\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\":\"hierarchy40\"},{\"type\":\"dd96\",\"tag_id\":\"1\",\"section_id\":\"4\",\"section_tipo\":\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"3\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\":\"hierarchy40\"}]"
          },
          {
            "name": "image_type",
            "in": "query",
            "description": "Selects type of image to use. Values are 'identify_image', 'posterframe'. Default is posterframe",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/thesaurus_video_view_data": {
      "post": {
        "description": "Gets data ued to view video fragment",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "lg-eng"
          },
          {
            "name": "term_id",
            "in": "query",
            "description": "Term id to get data like ts1_1",
            "required": true,
            "type": "string",
            "default": "ts1_1"
          },
          {
            "name": "locator",
            "in": "query",
            "description": "JSON ecoded array of locator objects like [{\"type\":\"dd96\",\"tag_id\":\"2\",\"section_id\":\"1\",\"section_tipo\":\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"1\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\":\"hierarchy40\"},{\"type\":\"dd96\",\"tag_id\":\"6\",\"section_id\":\"1\",\"section_tipo\":\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"1\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\":\"hierarchy40\"}]",
            "type": "string",
            "required": true,
            "default": "[{\"type\":\"dd96\",\"tag_id\":\"1\",\"section_id\":\"1\",\"section_tipo\":\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"1\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\":\"hierarchy40\"},{\"type\":\"dd96\",\"tag_id\":\"1\",\"section_id\":\"4\",\"section_tipo\":\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"3\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\":\"hierarchy40\"}]"
          },
          {
            "name": "locator_key",
            "in": "query",
            "description": "current array key selector. Default is '0'",
            "type": "integer",
            "required": false
          }
        ],
        "tags": [
          "Thesaurus"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/free_search": {
      "post": {
        "description": "Exec a search against transcription column in audiovisual table",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "default": "lg-eng"
          },
          {
            "name": "q",
            "in": "query",
            "description": "String to search",
            "type": "string",
            "required": true,
            "default": "Κυρία"
          },
          {
            "name": "search_mode",
            "in": "query",
            "description": "SQL type of search. Default is 'full_text_search'",
            "type": "string",
            "required": false
          },
          {
            "name": "rows_per_page",
            "in": "query",
            "description": "Number of records returned by page. Default is 10",
            "type": "integer",
            "format": "int",
            "required": false
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Current page number (pagination params)",
            "type": "integer",
            "format": "int",
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset used to paginate results. Default is 0",
            "type": "integer",
            "format": "int",
            "required": false
          },
          {
            "name": "apperances_limit",
            "in": "query",
            "description": "Max number of apperances (matches) calculated. Default is 1",
            "type": "integer",
            "format": "int",
            "required": false
          },
          {
            "name": "match_select",
            "in": "query",
            "description": "Selects specific match inside results. Default = false . Optional",
            "type": "boolean",
            "required": false
          },
          {
            "name": "count",
            "in": "query",
            "description": "Exec total records count. Default is true",
            "type": "boolean",
            "required": false
          },
          {
            "name": "image_type",
            "in": "query",
            "description": "Type of image returned. Options are posterframe | identify_image.  Default is posterframe",
            "type": "string",
            "required": false
          },
          {
            "name": "list_fragment",
            "in": "query",
            "description": "Resolve text fragment to show in list mode (small text, without video cut). Default is true",
            "type": "boolean",
            "required": false
          },
          {
            "name": "video_fragment",
            "in": "query",
            "description": "Activates video fragment resolution (with extended transcription fragment and video cut). Default is false",
            "type": "boolean",
            "required": false
          },
          {
            "name": "fragment_terms",
            "in": "query",
            "description": "Calculates terms (indexations) for current fragment of transcription. Default is false",
            "type": "boolean",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Apply a filter to result like 'section_tipo = 1'",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Free"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/full_reel": {
      "post": {
        "description": "Get full reel data. Complete transcription without tc cut. Used when you need show full interview (mode full)",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Auth code",
            "required": true,
            "type": "string",
            "default": "85df5s$dKlw8adQdp€"
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Query lang filter. Use Dédalo lang format like lg-eng for english. If undefined, current site lang is used",
            "required": false,
            "type": "string",
            "default": "lg-eng"
          },
          {
            "name": "av_section_id",
            "in": "query",
            "description": "Section id number to filter records",
            "type": "integer",
            "format": "int",
            "required": true,
            "default": 44
          },
          {
            "name": "image_type",
            "in": "query",
            "description": "Type of image returned. Options are posterframe | identify_image.  Default is posterframe",
            "type": "string",
            "required": false
          },
          {
            "name": "terms",
            "in": "query",
            "description": "Resolves current transcription indexed terms. Default is false",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Video view"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object"
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}