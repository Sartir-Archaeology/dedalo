<?php

	# VISUALIZADOR HTML


	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'in');

	print "<div class=\"wrap_component css_wrap_relation_parent wrap_component_{$modo} wrap_component_{$tipo}\" id=\"{$id_wrapper}\" ";
	print "data-tipo=\"{$tipo}\" ";	
	print "data-lang=\"{$lang}\" ";
	print "data-parent=\"{$parent}\" ";
	print "data-section_tipo=\"{$section_tipo}\" ";
	print "data-modo=\"{$modo}\" ";
	print "data-component_name=\"{$component_name}\" ";
	print "data-component_info='{$component_info}' ";
	print "data-relation_type=\"".DEDALO_RELATION_TYPE_CHILDREN_TIPO."\" "; // Note that use CHILDREN_TIPO for search only 
	print "data-search_tipos='".json_encode($search_tipos)."' ";
	print "data-hierarchy_sections='".json_encode($hierarchy_sections)."' ";  // Default hierarchy_sections
	print 'data-search_query_object=\''.$json_search_query_object.'\' ';
	print "data-limit=\"$limit\" ";
	print ">";

	# ETIQUETA (LABEL)
	$html_label = component_common_draw::draw_label($this);

	# CONTENIDO (INPUT)
	$html_content = '';
	switch($permissions) {

		case 0 :
			$html_content .= "";
			break;

		case 1 :
			$html_content .= $this->valor;
			break;

		case 2 :
		case 3 :
				

			$html_content .= '<div class="wrap_relation_parent_values">';

				# SOURCE_MODE SWITCH
				$source_mode = 'tree';
				switch ($source_mode) {
					
					case 'tree':
					case 'autocomplete':
					default:

						$hierarchy_types_json 	 	= '';
						$hierarchy_sections_json 	= json_encode($hierarchy_sections);

						# parent_area_is_model
						$parent_area_is_model 		= (isset($_GET['model']) && $_GET['model']==1) ? true : false;						
						$parent_area_is_model_json 	= json_encode($parent_area_is_model);

						# BTN LINK ELEMENT
						$html_content .= '<div class="button_add relation_parent_add_button" ';
						$html_content .= 'data-id_wrapper="'.$id_wrapper.'" ';
						$html_content .= 'data-component_name="'.$component_name.'" ';
						$html_content .= 'data-hierarchy_types=\''.$hierarchy_types_json.'\' ';
						$html_content .= 'data-hierarchy_sections=\''.$hierarchy_sections_json.'\' ';
						$html_content .= 'data-parent_area_is_model=\''.$parent_area_is_model_json.'\' ';
						$html_content .= 'onclick="component_common.open_ts_window(this)" ';
						$html_content .= '></div>';
						break;
				}//end switch ($source_mode)
				

				#
				# TERMS
				$html_content .= '<ul class="css_relation_parent_valor">';
				foreach ($ar_values as $item) {

					$current_locator 	  = $item->value;
					$current_locator_json = json_encode($current_locator);

					$html_content .= '<li>';

					# BTN DELETE
					$html_content .= '<div class="icon_bs link css_relation_parent_button_delete" ';
					$html_content .= 'data-current_value=\''.$current_locator_json.'\' ';
					$html_content .= 'onclick="component_relation_parent.delete(this)">';
					$html_content .= '</div>';


					# VALUE . STRING RESOLVED TO SHOW
					$html_content .= $item->label;
					$html_content .= ' <span class="notes">['.$current_locator->section_tipo.'_'.$current_locator->section_id.']</span>';
					
					$html_content .= '</li>';
				}
				$html_content .= '</ul>';

			$html_content .= '</div>';//end wrap_parent_values


			# INPUT DATA HIDDEN
				$html_content .= '<input type="text" name="'.$search_input_name.'" class="relation_parent_dato_hidden" style="width:100%;display:none" '; // display:none
				$html_content .= 'data-limit="'.$limit.'" ';
				$html_content .= 'value=\''.$dato_json.'\' ';
				$html_content .= "/>";


			#
			# COMPONENT_OPTIONS_CONTAINER
			$html_content .= '<div class="component_options_container">';

				#
				# AUTOCOMPLETE SERVICE
				$autocomplete_wrapper_id = 'aw_' . $identificador_unico;
				$html_content .= '<div class="autocomplete_wrapper" id="'.$autocomplete_wrapper_id.'"></div>';


			$html_content .= '</div>';//end component_options_container


			#
			# JS Init component
			$html_content .= '<script>';
			$init_options = new stdClass();
				$init_options->component_name 	= $component_name;
				$init_options->uid 				= $identificador_unico;
			$html_content .= "component_common.init(".json_encode($init_options).");";
			$html_content .= '</script>';


			if(SHOW_DEBUG===true) {
				#$html_content .= "<div class=\"debug_info\"> Current val: <strong>$valor</strong></div>";
				#$html_content .= "<span class=\"css_span_debugger\" id=\"debugger_{$tipo}\">{$debugger}</span>";
				$html_content .= "<span class=\"debug_info\">";
				$html_content .= "<br> locators in section relation (parent.tipo: ".$this->relation_type.") : ";
				$html_content .= wrap_pre( to_string($dato), false );
				$html_content .= "<br><span>".component_relation_parent::$get_parents_query."</span>";
				$html_content .= "</span>";
			}
			break;
	}

	# Prepare content to show in page
	tools::prepare_content($html_content);


	# PRINT HTML
	print $html_label;
	print $html_content;


	print '</div>'; //wrap

	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'out');

	
?>