<?php

	# VISUALIZADOR HTML

	# ELEMENTOS

	print "\n<!-- COMPONENT_AUTOCOMPLETE [tipo:$tipo section_id:$parent] $label -->";
	print "\n<div class=\"wrap_component css_wrap_autocomplete wrap_component_{$tipo}\" id=\"{$id_wrapper}\"
	data-tipo=\"{$tipo}\"
	data-lang=\"{$lang}\"
	data-parent=\"{$parent}\"
	data-section_tipo=\"{$section_tipo}\"
	data-ar_target_section_tipo='{$ar_target_section_tipo_json}'
	data-tipo_to_search='{$tipo_to_search}'
	data-modo=\"{$modo}\"
	data-from_modo=\"{$from_modo}\"
	data-dato='{$dato_json}'
	data-component_name=\"{$component_name}\"
	data-component_info='{$component_info}'
	>";

	# ETIQUETA (LABEL)
	$html_label = component_common_draw::draw_label($this);

	# CONTENIDO (INPUT)
	$html_contenido = '';
	switch($permissions) {

		case 0	:	$html_contenido .= "";
					break;

		case 1	: 	$html_contenido .= $valor;
					break;

		case ($permissions>=2)	:

					if($from_modo != 'edit'){
						$html_contenido .= "<div class=\"css_autocomplete_button_close\" onclick=\"component_common.change_mode_component(this, 'edit', '$from_modo')\"></div>";
					}
					

					# VALOR . STRING RESOLVED TO SHOW
					$html_contenido .= "\n <ul class=\"css_autocomplete_valor\">";
					foreach ($ar_valor as $current_value => $value) {

						$current_locator  		= json_decode($current_value);
						$current_section_id 	= $current_locator->section_id;
						$current_section_tipo 	= $current_locator->section_tipo;


						$html_contenido .= "<li>";


						#
						# BTN DELETE
						if (!$in_time_machine) {
						$html_contenido .= "\n <div class=\"icon_bs link css_autocomplete_button_delete\"
						data-tipo=\"{$tipo}\"
						data-current_value='$current_value'
						data-id_wrapper=\"$id_wrapper\"
						title=\"$label $parent\"
						onclick=\"component_autocomplete.delete(this)\"></div>";
						}


						#
						# LABEL
						$html_contenido .= "<span>$value</span>";


						#
						# BTN EDIT
						if (!$in_time_machine) {
						$html_contenido .= "<a href=\"javascript:;\" class=\"icon_bs link edit_autocomplete edit_autocomplete_row\" onclick=\"component_autocomplete.open_element(this)\"
						data-section_tipo=\"$current_section_tipo\"
						data-section_id=\"$current_section_id\"
						data-modo=\"edit\"
						data-menu=\"0\"
						></a>";
						}


						#
						# SEMANTICS
						# Mandatory vars to create semantic_node column
						if(!empty($this->semantic_nodes)) {
							$html_contenido .= "<div class=\"autocomplete_semantic_nodes\">";
							foreach ((array)$this->semantic_nodes as $semantic_node_tipo) {
							
								$semantic_node_title = RecordObj_dd::get_termino_by_tipo($semantic_node_tipo);

								$ds_key 			 = $semantic_node_tipo;
								$semantic_wrapper_id = $ds_key.'_'.$current_locator->section_tipo.'_'.$current_locator->section_id;
								$ds_element 		 = isset($current_locator->ds->$ds_key) ? $current_locator->ds->$ds_key : null;
								
								ob_start();
								include(DEDALO_LIB_BASE_PATH . '/tools/tool_semantic_nodes/html/tool_semantic_nodes_node.phtml');
								$html_contenido .= ob_get_clean();
								
							}
							$html_contenido .= "</div>";
						}
						

						if(SHOW_DEBUG) {
							#$html_contenido .= " <span class=\"notes\">$current_value</span>";
						}

						$html_contenido .= "</li>";

					}
					$html_contenido .= "</ul>";


					if (!$in_time_machine) {

						#
						# BTN EDIT WHOLE SECTION
						#$url_edit = "?t=".reset($ar_target_section_tipo).'&menu=0';	// To first section only  onclick=\"window.open('$url_edit')\"
						$open_section_tipo = reset($ar_target_section_tipo);
						$open_section_id   = null;
						$html_contenido .= "<a href=\"javascript:;\" class=\"icon_bs link edit_autocomplete\" onclick=\"component_autocomplete.open_element(this)\"
						data-section_tipo=\"$open_section_tipo\"
						data-section_id=\"$open_section_id\"
						data-modo=\"list\"
						data-menu=\"1\"
						></a>";


						#
						# BTN NEW ELEMENT
						$html_contenido .= "<div class=\"icon_bs link new_autocomplete\" data-target_section_tipo=\"".reset($ar_target_section_tipo)."\" onclick=\"component_autocomplete.new_element(this,'$id_wrapper')\"></div>";


						#
						# INPUT SEARCH FIELD
						$html_contenido .= "\n <input type=\"text\" class=\"css_autocomplete_search_field\" placeholder=\"".label::get_label('buscar')."...\"
							data-id_wrapper=\"$id_wrapper\"
							data-tipo='{$tipo}'
							data-section_tipo=\"{$section_tipo}\"
							data-parent='{$parent}'
							data-ar_target_section_tipo='{$ar_target_section_tipo_json}'
							data-tipo_to_search='{$tipo_to_search}'
							onfocus=\"component_autocomplete.activate(this)\"
							tabindex=\"1\"
							/>";


						#
						# NEW_ELEMENT_CONTAINER ajax loads here
						$html_contenido .= "<div class=\"new_element_container\" data-type=\"new_element_container\"></div>";

						if(SHOW_DEBUG) {
							$html_contenido .= "<div class=\"debug_info notes\">target_section_tipo: ".implode(', ', $ar_target_section_tipo)."</div>";
							if (isset($propiedades->filtered_by)) {
								$html_contenido .= "<div class=\"debug_info notes\">filtered_by: ".json_encode($propiedades->filtered_by)."</div>";	// filtered_by
							}
							$html_contenido .= "<div class=\"debug_info notes\">".str_replace('},', '},<br>', $dato_json) ."</div>";
						}
					}


					#
					# INPUT DATA HIDDEN
					$html_contenido .= "\n <input type=\"text\" class=\"css_autocomplete_dato_hidden\"
						name=\"{$input_name}\"
						data-type=\"autocomplete_dato_hidden\"
						data-tipo=\"{$tipo}\"
						data-section_tipo=\"{$section_tipo}\"
						data-parent=\"{$parent}\"
						data-lang=\"{$lang}\"
						data-ar_target_section_tipo='{$ar_target_section_tipo_json}'
						data-dato_in_db='{$dato_json}'
						data-id_wrapper=\"$id_wrapper\"
						value='{$dato_json}'
						title=''
						disabled=\"disabled\"
						/>";


					if(SHOW_DEBUG) {
						#$html_contenido .= "\n <span class=\"css_span_debugger\" id=\"debugger_{$tipo}\" >{$debugger}</span>";
					}
					break;

	}

	# Prepare content to show in page
	tools::prepare_content($html_contenido);


	# PRINT HTML
	print $html_label;
	print $html_contenido;

	if(SHOW_DEBUG) {
		if (isset($this->ar_list_of_values->debug)) {
			echo $this->ar_list_of_values->debug;
		}
	}

	print "\n</div><!-- /css_wrap_component_autocomplete COMPONENT_AUTOCOMPLETE [tipo:$tipo section_id:$parent] $label -->\n\n"; //wrap
?>
