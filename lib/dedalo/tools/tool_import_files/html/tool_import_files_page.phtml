<?php

	# VISUALIZADOR HTML

	$custom_tool_label = isset($custom_tool_label) ? " : <h2>$custom_tool_label</h2>" : '';

	#
	# HEADER HTML
		$header_html = '';
		$header_html  .= "\n<!-- TOOL IMPORT FILES [tipo:$tipo] -->";
		$header_html  .= "<div class=\"tool_header\">";
		$header_html  .= " <div class=\"h2_title\"> TOOL IMPORT FILES $custom_tool_label ";
		if(SHOW_DEBUG===true) {
		$header_html  .= " <span class=\"notes\">[$import_mode] ";
			if ($import_mode==='section') {
				$header_html  .= " Creates one section $section_tipo and one portal record $target_section_tipo for each file ";
			}else{
				$header_html  .= " Creates one portal record $target_section_tipo for each file ";
			}
		$header_html  .= "</span>";
		}		
		$header_html  .= " </div>";
		$header_html  .= " <div class=\"import_context_label\">";
		if(SHOW_DEBUG && $context!=='form') {
		$header_html .= "  <span class=\"debug_info\">".TOOL_IMPORT_FILES_UPLOAD_DIR."</span>";
		}
		$header_html  .= " </div>";//import_context_label
		$header_html  .= " </div>";//tool_header
		echo $header_html;


	#
	# HELP INFO
		if($context_name=='files' && isset($import_help)) {
			echo $import_help;
		}		
	

	#
	# FILES UPLOAD MANAGER HTML
		include(DEDALO_LIB_BASE_PATH.'/tools/tool_import_files/html/jquery_upload.phtml');		
		echo "<script>var upload_handler_url='$upload_handler_url';</script>";
	
	
	#
	# FORM (Temporal section)
		# Note that current section_id received in get url is like 'tmp1'. Section change automatically save_handler (to 'session') for manage this cases as temporal section		
		$temp_id 			= DEDALO_SECTION_ID_TEMP.'_'.$parent.'_'.$user_id;
		$temp_section_tipo  = $target_section_tipo; // Default
		if ($import_mode==='section') {
			$temp_section_tipo = $section_tipo;
			#dump($section_tipo, ' section_tipo ++ '.to_string());
		}
		$section = section::get_instance($temp_id, $temp_section_tipo, 'edit');

		# Add custom layout map defined in propiedades of current component portal
		if (!empty($custom_layout_map)) {
			$section->layout_map = $custom_layout_map;	// Inject custom layout map fron propiedades
		}		
		$section->show_inspector = (bool)false;
			#dump($section->layout_map, ' section ++ '.to_string( $section->get_tipo() ));
		
		
		$section_temp_html  = '';
		$section_temp_html .= "<div class=\"wrap_section_temp\">";
		$section_temp_html .= $section->get_html();
		$section_temp_html .= "</div>";
		
		#
		# PAGE_GLOBALS : Set vars to enable components save data in session
		#$section_temp_html .= "<script>
		#page_globals.modo='edit';
		#	//console.log(page_globals);		
		#</script>";

		echo $section_temp_html;






	#
	#Â FOOTER HTML
		$footer_html='';
		$footer_html .= "<div class=\"import_context_label_footer \">";
		$footer_html .= " <a id=\"button_import_images\" href=\"javascript:;\" class=\"btn btn-success fileinput-button\"
		data-tipo=\"$tipo\"
		data-section_tipo=\"$section_tipo\"
		data-parent=\"$parent\"
		data-import_mode=\"$import_mode\"
		onclick=\"tool_import_files.import_files(this)\">
							<strong>OK</strong> <span>".label::get_label('tool_import_images'). ' ' .strip_tags($custom_tool_label). " </span>
						  </a>";
		$footer_html .= "</div>";
		echo $footer_html;
?>
<script>
	// PAGE_GLOBALS : Set vars to enable components save data in session
	page_globals.modo='edit';
	// SGC_EDIT
	var current_record_wrap = document.getElementById('current_record_wrap')
	if (current_record_wrap) {		
		// sgc_edit . To enable structure css affect to components, add 'sgc_edit' class to component wrapper simulating a section group
		current_record_wrap.classList.add('sgc_edit')
	}
</script>


