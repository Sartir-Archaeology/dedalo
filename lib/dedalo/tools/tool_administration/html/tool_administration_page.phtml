	<?php

	# VISUALIZADOR HTML		

	$html    = "\n<!-- TOOL ADMINISTRATION -->";	
	$html   .= "\n<div class=\"wrap_tool wrap_tool_administration_page\" >";


	
	


	#$html   .= $header_html;

	# TEST POSTGRES UNACCENT
	# Verify if postgres unaccent extension is available
		try {
			$strQuery = PHP_EOL.sanitize_query("SELECT * FROM \"matrix_projects\" WHERE section_id IS NOT NULL AND unaccent(datos#>>'{components, dd156 , valor}') ILIKE '%any%' LIMIT 1;");
			$result	  = JSON_RecordObj_matrix::search_free($strQuery);
			if (!$result) {
				$msg = 'Error on get unaccent extension';
				$html .= "<span class=\"error\">$msg</span>";
			}		
		} catch (Exception $e) {
		    #$msg = 'Error on get unaccent extension - Exception: ' . $e->getMessage();
		    #$html .=$msg;
		}


	#
	# ADMIN UTILS
	$html   .= "\n<div class=\"content_data block-content-1\" >";

		# Check PHP shell_exec permissions
		$a = shell_exec("ls -l");
		if (empty($a)) {
			$html   .= "<div class=\"error\">WARNING. Your PHP shell_exec seems not work. Please review your server php config</div>";
			dump($a, ' shell_exec command ls -l ++ '.to_string($a));
		}			

		# Check DB config
		if (empty(DB_BIN_PATH)) {
			$html   .= "<div class=\"warning\">WARNING. Your DB config DB_BIN_PATH is empty. This can create problems in some servers</div>";
		}

		# PANELS
		$html   .= "<div class=\"panel panel-primary\">";
		$html   .= "  <div class=\"panel-heading\">";
		$html   .= "    <h3 class=\"panel-title\"> ADMIN UTILS </h3>";
		$html   .= "  </div>";
		$html   .= "  <div class=\"panel-body\">";		


			#
			# BACKUP FORCE
			$html   .= "<div class=\"panel_option\">";
			$html   .= "  <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span> ";
			$html   .= "  <a href=\"javascript:;\" data-mode=\"make_backup\" onclick=\"tool_administration.make_backup(this,event)\">".label::get_label('hacer_backup')."</a>";
			$html   .= " <div class=\"panel_option_subcontent\">";
			$html   .= "  <div id=\"make_backup_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option



			#
			# UPDATE STRUCTURE
			$html   .= "<div class=\"panel_option\">";
			$html   .= "  <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span> ";			
			if (DEDALO_ENTITY=="master") {
			$html   .= " <a> ".label::get_label('actualizar_estructura')." is a disabled for ".DEDALO_ENTITY." </a>";
			}else{
			if (defined('STRUCTURE_FROM_SERVER') && STRUCTURE_FROM_SERVER===true && !empty(STRUCTURE_SERVER_URL)) {
				$url = STRUCTURE_SERVER_URL;
				$parse = parse_url($url);
				$from_remote = " from remote: <strong>".$parse['host']."</strong>";
			}
			$html   .= "  <a href=\"javascript:;\" data-mode=\"update_structure\" onclick=\"tool_administration.update_structure(this,event)\">".label::get_label('actualizar_estructura')."</a>".$from_remote;	
			}
			$html   .= " <div class=\"panel_option_subcontent\">";
			$dedalo_structure_info = RecordObj_dd::get_termino_by_tipo(DEDALO_ROOT_TIPO,'lg-spa');
			#$html   .= "<div>$dedalo_structure_info</div>";			
			$html   .= "  <div id=\"update_structure_response\">Current: $dedalo_structure_info</div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option



			#
			# UPDATE VERSION
			$html   .= "<div class=\"panel_option\"> ";
			$html   .= "  <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span> ";
			if($update_version) {				

				#$html   .= "  <div class=\"panel_option\">";
				#$html   .= "  <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span> ";
				#$html   .= "  <a href=\"javascript:;\"
				#data-mode=\"update_version\"
				#data-update_version=\"$update_version\" onclick=\"tool_administration.update_version(this,event)\">".label::get_label('actualizar')." ".label::get_label('datos')."</a>";
				$html   .= "  <span>".label::get_label('actualizar')." ".label::get_label('datos')."</span>";

				$html 	.= "  <span>[";
				$html 	.= "  <span id=\"update_current_version\">DÃ©dalo ver: $current_dedalo_version</span> - ";
				$html 	.= "  <span id=\"update_current_version\">User data in PostgreSQL ver: $current_version_in_db</span>";
				$html 	.= "  ]</span>";
				
				$html   .= " <div class=\"panel_option_subcontent\">";
				$html 	.= "  <span id=\"update_current_version\">$current_version_in_db</span>";
				$html 	.= "  <span id=\"update_to_version\"> -----> $update_version</span>";


				include(dirname(dirname(__FILE__)) .'/updates/updates.php');
				$update_version_plain = str_replace('.', '', $update_version);
				if (isset($updates->$update_version_plain->alert_update)) {
					foreach ($updates->$update_version_plain->alert_update as $akey => $avalue) {
						$notification = $avalue->notification;
						$command 	  = $avalue->command;
						$html   .= "<div class=\"alert_notification\"><div class=\"icon_warning\"></div>$notification</div>";
						$html   .= "<div class=\"alert_command\">$command</div>";
						#$html   .= '<pre>'. $akey .' - ' .print_r($avalue,true) .'</pre>';	
					}					
				}
				
				#if(SHOW_DEBUG===true) {
					// Show updates object (current target correspondence) with all config to apply to current update script
					$html   .= " <input type=\"button\" class=\"btn btn-default btn-sm btn_update\" value=\"Run all update data version actions\"
					data-mode=\"update_version\"
					data-update_version=\"$update_version\"
					onclick=\"tool_administration.update_version(this,event)\">";
					# Actions list
					if (isset($updates->$update_version_plain)) {
						foreach ($updates->$update_version_plain as $key => $value) {
							
							if (is_object($value) || is_array($value)) {
								$i=0;
								foreach ($value as $vkey => $vvalue) {
									if($key==='alert_update') continue;
									if($i===0) $html   .= "<h6>$key</h6>";
									if(is_string($vvalue)) $vvalue = trim($vvalue);
									$html   .= '<pre class="command"><span class="vkey">'.($vkey+1).'</span><span class="vkey_value">'. print_r($vvalue, true) .'</span></pre>';
									$i++;	
								}								
							}
						}
					}
				#}
				$html   .= "  <div id=\"update_version_response\"></div>";
				$html   .= "  </div>";#end panel_option_subcontent

			}else{

				$html   	.=  " <span>".label::get_label('actualizar')."</span>";

				$html 		.= "  <span id=\"update_current_version\">$current_dedalo_version</span>";
				$html   	.= " <div class=\"panel_option_subcontent\">";
				if($current_dedalo_version == $current_version_in_db){
					$html 	.= "  <span class=\"glyphicon glyphicon-ok-circle\" aria-hidden=\"true\" style=\"color:#5cbd39\"></span> ";
					$html 	.= "  <span class=\"\" style=\"color:#5cbd39\">Data format is updated</span> ";
				}else{
					$html 	.= "  <span class=\"glyphicon glyphicon-ban-circle\" aria-hidden=\"true\" style=\"color:#f72f19\"></span> ";
					$html 	.= "  <span id=\"update_current_version\">User data in PostgreSQL ver: $current_version_in_db</span> </br>";					
					$html 	.= "  <span>ALERT: DON'T HAVE UPDATE!!</span> </br>";
				}
				$html  		.= "  </div>";#end panel_option_subcontent
			}
			$html   .= "</div>";#end panel_option


			/*
			#
			# FORCE_UNLOCK_ALL_COMPONENTS
			$html   .= "<div class=\"panel_option\">";
			$html   .= "  <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= "  <a href=\"javascript:;\" data-mode=\"force_unlock_all_components\" onclick=\"tool_administration.force_unlock_all_components(this, event)\">".label::get_label('desbloquear_todos_los_componentes')."</a>";
			$html   .= " <div class=\"panel_option_subcontent\">";	
			$html   .= "  <div id=\"force_unlock_all_components_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option
			*/


			#
			# REMOVE_INVERSE_LOCATORS_IN_SECTION
			$html   .= "<div class=\"panel_option form-inline\">";
			$html   .= "  <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= "  <span>".label::get_label('remove_inverse_locators_in_section')."</span>";
			$html   .= " <div class=\"panel_option_subcontent\">";
			$html   .= "  <input type=\"text\" id=\"remove_inverse_locators_in_section_section_tipo\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"".label::get_label('section_tipo')."\" />";
			$html   .= "  <input type=\"button\" class=\"btn btn-default btn-sm\" value=\"".label::get_label('borrar')."\" data-mode=\"remove_inverse_locators_in_section\" onclick=\"tool_administration.remove_inverse_locators_in_section(this, event)\" />";
			$html   .= "  <div id=\"remove_inverse_locators_in_section_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option


			#
			# BUILD_STRUCTURE_CSS
			$html   .= "<div class=\"panel_option\">";
			$html   .= " <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= " <a href=\"javascript:;\" data-mode=\"build_structure_css\" onclick=\"tool_administration.build_structure_css(this,event)\">".label::get_label('build_structure_css')."</a>";
			$html   .= " <div class=\"panel_option_subcontent\">";
			$html   .= "  <div id=\"build_structure_css_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option


			#
			# DELETE_COMPONENT_TIPO_IN_MATRIX_TABLE
			$html   .= "<div class=\"panel_option form-inline\"> ";
			
			$html   .= " <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= " <span>".label::get_label('delete_component_tipo_of_section_tipo')."</span>";

			$html   .= " <div class=\"panel_option_subcontent\">";
			$html   .= "  <span title=\"section tipo\">".label::get_label('section_tipo')."</span>";
			$html   .= "  <input type=\"text\" id=\"delete_section_tipo\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"".label::get_label('section_tipo')."\" />";
			$html   .= "  <span title=\"component tipo\">".label::get_label('component_tipo')."</span>";
			$html   .= "  <input type=\"text\" id=\"delete_component_tipo\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"".label::get_label('component_tipo')."\" />";
			$html   .= "  <span title=\"Language\">".label::get_label('tool_lang')."</span>";
			$html   .= "  <input type=\"text\" id=\"delete_language\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"".label::get_label('tool_lang')."\" />";			
			$html   .= "  <div class=\"checkbox\"><label><input type=\"checkbox\" id=\"delete_save\" class=\"form-control input-sm\" name=\"Save\" value=\"true\" /> <span>".label::get_label('salvar')."</span></label></div>";	
			$html   .= "  <input type=\"button\" class=\"btn btn-default btn-sm\" value=\"".label::get_label('borrar')."\" data-mode=\"delete_component_tipo_in_matrix_table\" onclick=\"tool_administration.delete_component_tipo_in_matrix_table(this,event)\" />";
			$html   .= "  <div id=\"delete_component_tipo_in_matrix_table_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent

			$html   .= "</div>";#end panel_option


			#
			# SKIP_PUBLICATION_STATE_CHECK
			$checked = (isset($_SESSION['dedalo4']['config']['skip_publication_state_check']) && $_SESSION['dedalo4']['config']['skip_publication_state_check']==1) ? 'checked="checked"' : '';
			$html   .= "<div class=\"panel_option\">";
			$html   .= " <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= " <span>".label::get_label('skip_publication_state_check')."</span>";
			$html   .= " <div class=\"panel_option_subcontent panel_option_subcontent_inline\">";
			$html   .= "   <div class=\"checkbox\"><label>
							<input type=\"checkbox\" id=\"skip_publication_state_check\" class=\"\" name=\"skip_publication_state_check\" value=\"true\" $checked
							onchange=\"tool_administration.skip_publication_state_check(this, event)\"
							data-mode=\"skip_publication_state_check\">
							</label>
						  </div>";			
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= " <div id=\"skip_publication_state_check_response\"></div>";
			$html   .= "</div>";#end panel_option
			

			#
			# REMOVE AV TEMPORALS
			$html   .= "<div class=\"panel_option\">";
			$html   .= " <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= " <a href=\"javascript:;\" data-mode=\"remove_av_temporals\" onclick=\"tool_administration.remove_av_temporals(this,event)\">".label::get_label('remove_av_temporals')."</a>";
			$html   .= " <div class=\"panel_option_subcontent\">";
			$html   .= "  <div id=\"remove_av_temporals_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option


			#
			# IMPORT DEDALO CSV FILES
			$html   .= "<div class=\"panel_option\">";
			$html   .= " <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$url 	 = DEDALO_LIB_BASE_URL."/main/?m=tool_import_dedalo_csv&t=".DEDALO_AREA_ROOT_TIPO."&menu=1";
			$html   .= " <a href=\"$url\" data-mode=\"remove_av_temporals\">".label::get_label('tool_import_dedalo_csv')."</a>";			
			$html   .= "</div>";#end panel_option

			#
			# MOVE COMPONENT DATA
			$options = new stdClass();
			# Source options
			$options->source_section_tipo 	= null;
			$options->source_section_id 	= null; // array or null for all records
			$options->source_delete 		= false; // bool
			$options->source_portal_tipo 	= null;	// portal tipo where hook the target section
			# Target options
			$options->target_section_tipo 	= null;
			$options->target_section_id 	= null; // array or null for all records			
			# Others
			$options->map_components 		= array(); // key is source component tipo. value is target component tipo

			$html   .= "<div class=\"panel_option form-inline\"> ";			
			$html   .= " <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= " <span>".label::get_label('mover_datos_de_componentes')."</span>";

			$html   .= " <div class=\"panel_option_subcontent\">";
			
			$html   .= "  <input type=\"text\" title=\"source section tipo\" id=\"move_source_section_tipo\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"source section tipo\" />";
			$html   .= "  <input type=\"text\" title=\"source section id\" id=\"move_source_section_id\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"source section id\" />";
			$html   .= "  <input type=\"text\" title=\"source portal tipo\" id=\"move_source_portal_tipo\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"source portal tipo\" />";
			
			$html   .= "  <div class=\"checkbox\"><label><input type=\"checkbox\" id=\"move_source_delete\" class=\"form-control input-sm\" name=\"Source delete\" value=\"true\" checked=\"checked\" /> <span>".label::get_label('delete_source_data')."</span></label></div><br>";
			
			$html   .= "  <input type=\"text\" title=\"target section tipo\" id=\"move_target_section_tipo\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"target section tipo\" />";
			$html   .= "  <input type=\"text\" title=\"target section id\" id=\"move_target_section_id\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"target section id\" />";

			$html   .= "  <input type=\"text\" title=\"map components\" id=\"move_map_components\" class=\"form-control input-sm\" style=\"width: 100%;margin-top:2px;\" placeholder='map_components - json object like ". '{"oh16":"rsc23"}' ."' /><br>";
				
			$html   .= "  <input type=\"button\" class=\"btn btn-default btn-sm\" value=\"".label::get_label('mover')."\" data-mode=\"move_component_data\" onclick=\"tool_administration.move_component_data(this,event)\" />";
			$html   .= "  <div id=\"move_component_data_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option


			#
			# UPDATE_JER_FROM_4_0_TO_4_1
			$html   .= "<div class=\"panel_option form-inline\"> ";			
			$html   .= " <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= " <span>".label::get_label('update_jer_from_V3_to_4_5')."</span>";
			$html   .= " <div class=\"panel_option_subcontent\">";
			$html   .= "  <span title=\"section tipo\">".label::get_label('tld')."</span>  &nbsp;";
			$html   .= "  <input type=\"text\" id=\"tld\" class=\"form-control input-sm\" autocomplete=\"off\" placeholder=\"tld2 like: ts\" />";
			$html   .= "  <div class=\"checkbox\"><label><input type=\"checkbox\" id=\"modelo\" class=\"form-control input-sm\" name=\"modelo\" value=\"true\" /> <span>".label::get_label('modelo')."</span></label></div>";	
			$html   .= "  <input type=\"button\" class=\"btn btn-default btn-sm\" value=\"".label::get_label('actualizar')."\" data-mode=\"delete_component_tipo_in_matrix_table\" onclick=\"tool_administration.update_jer_from_4_0_to_4_1(this,event)\" />";
			$html   .= "  <div id=\"update_jer_from_4_0_to_4_1_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option

			

		$html   .= "  </div>";//end panel-body
		$html   .= "</div>";//end panel-primary
		

	$html   .= "\n</div>";//end content_data block-content-1


	
	#
	# USERS INFO
	$html   .= "\n<div class=\"content_data\" >";	// text_shadow_inset

		# PANELS
		$html   .= "<div class=\"panel panel-info\">";
		$html   .= "  <div class=\"panel-heading\">";
		$html   .= "    <h3 class=\"panel-title\"> USERS INFO </h3>";
		$html   .= "  </div>";
		$html   .= "  <div class=\"panel-body\">";

			#
			# FORCE_UNLOCK_ALL_COMPONENTS
			$html   .= "<div class=\"panel_option\">";
			$html   .= "  <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>";
			$html   .= "  <a href=\"javascript:;\" data-mode=\"force_unlock_all_components\" onclick=\"tool_administration.force_unlock_all_components(this, event)\">".label::get_label('desbloquear_todos_los_componentes')."</a>";
			$html   .= " <div class=\"panel_option_subcontent\">";	
			$html   .= "  <div id=\"force_unlock_all_components_response\"></div>";
			$html   .= " </div>";#end panel_option_subcontent
			$html   .= "</div>";#end panel_option

		
			#
			# ACTIVE_USERS
			if (defined('DEDALO_LOCK_COMPONENTS') && DEDALO_LOCK_COMPONENTS===true) {		
				$html   .= "<div>";
				$html   .= " <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span> ";
				$html   .= " <a href=\"javascript:;\" onclick=\"tool_administration.get_active_users(this)\">".label::get_label('usuarios_activos')."</a>";
				$html   .= "</div>";
				$html   .= "<div id=\"active_users\"></div>";
			}

		$html   .= "  </div>";//end panel-body
		$html   .= "</div>";//end panel-info

	$html   .= "\n</div>";//end content_data

	
	#
	# SYSTEM INFO
	$html   .= "\n<div class=\"content_data block-content-2\" >";	// text_shadow_inset


		$html   .= "<div class=\"panel panel-info\">";
		$html   .= "  <div class=\"panel-heading\">";
		$html   .= "    <h3 class=\"panel-title\"> SYSTEM INFO </h3>";
		$html   .= "  </div>";
		#$html   .= "  <div class=\"panel-body\">";
		$html   .= "<ul class=\"list-group panel-body\">";


			#
			# DEDALO VERSION
			$dedalo_structure_info = RecordObj_dd::get_termino_by_tipo(DEDALO_ROOT_TIPO,'lg-spa');
			$prefix_tipos  = unserialize(DEDALO_PREFIX_TIPOS);
			$dedalo_structure_info .= "\n".'Prefix: '. implode(",",$prefix_tipos);
			$info_database = pg_version(DBi::_getConnection());	
			$html .= tool_administration::show_info( "Dedalo version",
													 DEDALO_VERSION,
													 "v".DEDALO_VERSION ." | Build: ".DEDALO_BUILD
													);


			#
			# DEDALO STRUCTURE
			$dedalo_structure_info = RecordObj_dd::get_termino_by_tipo(DEDALO_ROOT_TIPO);
			$prefix_tipos  = unserialize(DEDALO_PREFIX_TIPOS);
			$dedalo_structure_info .= "\n".'Prefix: '. implode(",",$prefix_tipos);
			$info_database = pg_version(DBi::_getConnection());	
			$html .= tool_administration::show_info( "Dedalo structure review",
													 '',
													 $dedalo_structure_info
													);

			#
			#Â DEDALO DATA VERSION
			$info_database = pg_version(DBi::_getConnection());	
			$html .= tool_administration::show_info( "Dedalo data version",
													 ' (matrix_update)',
													 $current_version_in_db
													);


			#
			#Â DATABASE
			$info_database = pg_version(DBi::_getConnection());
			$info_database['host'] = to_string(DEDALO_HOSTNAME_CONN);
			$html .= tool_administration::show_info( "Database",
													 $info_database['IntervalStyle']. " ". $info_database['server']. " ".DEDALO_HOSTNAME_CONN,
													 $info_database
													);

			#
			# PHP USER
			if(SHOW_DEBUG===true) {
			$processUser = posix_getpwuid(posix_geteuid());
			$html .= tool_administration::show_info( "PHP user",
													 $processUser['name'],
													 $processUser
													);
			}


			#
			# USER_LIMITS
			if(SHOW_DEBUG===true) {			
			$user_limits = shell_exec("ulimit -a");
			$user_limits .= "-Hn\t\t\t\t     ".shell_exec("ulimit -Hn");
			$user_limits .= "-Sn\t\t\t\t     ".shell_exec("ulimit -Sn");
			$html .= tool_administration::show_info( "USER_LIMITS",
													 "".$processUser['name'],
													 $user_limits
													);
			}

			#
			# DISK SPACE
			if(SHOW_DEBUG===true) {			
			$html .= tool_administration::show_info( "DISK SPACE",
													 "DF COMMAND",
													 shell_exec("df -h")
													);
			}

			#
			# MAX_INPUT_VARS
			$max_input_vars = ini_get("max_input_vars");
			$html .= tool_administration::show_info( "PHP Max. vars directive",
													'max_input_vars',
													 $max_input_vars
													);

			#
			# SESSION_CACHE_LIMITER
			$cache_limiter = session_cache_limiter();
			$html .= tool_administration::show_info( "PHP session_cache_limiter",
													'cache_limiter',
													 $cache_limiter
													);

			#
			# SESSION_CACHE_EXPIRE
			$cache_expire = session_cache_expire();
			$html .= tool_administration::show_info( "PHP session_cache_expire",
													'cache_expire in minutes',
													 $cache_expire ." (".((int)$cache_expire/60)." hours)"
													);

			#
			# SESSION.GC_MAXLIFETIME
			$gc_maxlifetime = ini_get("session.gc_maxlifetime");
			$html .= tool_administration::show_info( "PHP gc_maxlifetime",
													'gc_maxlifetime in secs',
													 $gc_maxlifetime ." (".($gc_maxlifetime/3600)." hours)"
													);

			#
			# SESSION_SAVE_PATH
			$session_save_path = session_save_path();
			$html .= tool_administration::show_info( "PHP session_save_path()",
													'session_save_path',
													 $session_save_path
													);
			
			#
			# ENCODING mb_internal_encoding
			$result = mb_internal_encoding();
			$html .= tool_administration::show_info( "PHP ENCODING",
													 "mb_internal_encoding",
													 $result
													);
			

			#
			# ENCODING mb_regex_encoding
			$result = mb_regex_encoding();
			$html .= tool_administration::show_info( "PHP ENCODING",
													 "mb_regex_encoding",
													 $result
													);		

			

			#
			# HTTP HEADERS
			# it could be useful if you using nginx instead of apache
			try {

				# APACHE_VERSION
				if (function_exists('apache_get_version')) {
					$apache_version = apache_get_version();
				}else{					
					$apache_version = shell_exec("httpd -v");
				}
				$apache_version = !empty($apache_version) ? $apache_version : "Unavailable (function 'apache_get_version' not exists)";
				$html .= tool_administration::show_info( "APACHE VERSION",
														 "Apache version",
														 $apache_version
														);				

				# APACHE HEADERS
				/*
				if (function_exists('get_headers')) {
					if (!function_exists('getallheaders')) { 
						function getallheaders() { 
							   $headers = ''; 
							foreach ($_SERVER as $name => $value) { 
								if (substr($name, 0, 5) == 'HTTP_') { 
									$headers[str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', substr($name, 5)))))] = $value; 
							   }
							} 
						   return $headers; 
						} 
					}
					$url 	 = DEDALO_PROTOCOL . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
					$headers = array();
					#$headers += headers_list();
					$headers[] = get_headers($url, 1);
					$headers[] = getallheaders();
					$html .= tool_administration::show_info( "HTTP HEADER",
															 " $url",
															 $headers
															);
				}//end if (function_exists('get_headers'))
			*/
			} catch (Exception $e) {			    
			    $html .= tool_administration::show_info( "APACHE INFO ERROR",
													 "Apache info exception",
													 "<span class=\"warning\">Exception on get apache info: " . $e->getMessage() . "</span>"
													);
			}

			#
			# FFMPEG
			$ffmpeg = shell_exec(DEDALO_AV_FFMPEG_PATH." -version ");
			$ffmpeg_config = shell_exec(DEDALO_AV_FFMPEG_PATH." -buildconf ");
			preg_match("/ffmpeg version (.*) Copyright/", $ffmpeg, $output_array);
			$html .= tool_administration::show_info( "FFMPEG",
													 $output_array[1] ." - ". DEDALO_AV_FFMPEG_PATH,
													 $ffmpeg . $ffmpeg_config 
													);


			#
			# FFPROBE
			$ffprobe = shell_exec(DEDALO_AV_FFPROBE_PATH." -version ");	
			preg_match("/ffprobe version (.*) Copyright/", $ffprobe, $output_array);
			$html .= tool_administration::show_info( "PROBE",
													 $output_array[1] ." - ". DEDALO_AV_FFPROBE_PATH,
													 $ffprobe
													);

			#
			# DEDALO_AV_FASTSTART_PATH
			$faststart = shell_exec(DEDALO_AV_FASTSTART_PATH." -v ");
			$html .= tool_administration::show_info( "FASTSTART",
													 DEDALO_AV_FASTSTART_PATH,
													 $faststart
													);



			#
			# IMAGE MAGICK
			$result = shell_exec(MAGICK_PATH."convert -version ");
			preg_match("/Version: ImageMagick (\S*)\s/", $result, $output_array);	
			$image_magick_version = isset($output_array[1]) ? $output_array[1] : "Unavailable";
			$html .= tool_administration::show_info( "IMAGE MAGICK",
													 $image_magick_version ." - ". MAGICK_PATH,
													 $result
													);


			#
			# NODE JS
			$result = shell_exec(DEDALO_NODEJS." -v ");
			$html .= tool_administration::show_info( "NODE JS",
													 $result." - ".DEDALO_NODEJS,
													 $result
													);
			

			#
			# TINYMCE
			#$path = DEDALO_ROOT.'/lib/tinymce/js/tinymce/tinymce.min.js';
			$path = str_replace(DEDALO_ROOT_WEB, DEDALO_ROOT, TEXT_EDITOR_URL_JS);
			$f = fopen($path, 'r');
			$result = fgets($f);
			fclose($f);
			preg_match("/\/\/\s(\S*)\s/", $result, $output_array);
			$html .= tool_administration::show_info( "TINYMCE",
													 $output_array[1]." - ".$path,
													 $result
													);



			#
			# JQUERY
			#$path = DEDALO_ROOT.'/lib/jquery/jquery.min.js';
			$path = str_replace(DEDALO_ROOT_WEB, DEDALO_ROOT, JQUERY_LIB_URL_JS);
			$f = fopen($path, 'r');
			$result = fgets($f);
			fclose($f);
			preg_match("/\*\!\sjQuery v(\S*)\s/", $result, $output_array);
			$html .= tool_administration::show_info( "JQUERY",
													 $output_array[1]." - ".$path,
													 $result
													);


			#
			# PAPER
			#$path = DEDALO_ROOT.'/lib/paper/dist/paper-full.min.js';
			$path = str_replace(DEDALO_ROOT_WEB, DEDALO_ROOT, PAPER_JS_URL);
			$lines = file($path);//file in to an array
			$result = $lines[1]; //line 2
			preg_match("/js v(\S*)\s-/", $result, $output_array);
			$html .= tool_administration::show_info( "PAPER",
													 $output_array[1]." - ".$path,
													 $result
													);


			#
			# LEAFLET
			#$path = DEDALO_ROOT.'/lib/leaflet/stable_versions/leaflet.js';
			$path = str_replace(DEDALO_ROOT_WEB, DEDALO_ROOT, LEAFLET_JS_URL);
			$lines = file($path);//file in to an array
			$result = $lines[1]; //line 2
			preg_match("/Leaflet ([0-9]\.[0-9]\.[0-9])\+.{1,12},/", $result, $output_array);
			#$result = $output_array[1];
			$html .= tool_administration::show_info( "LEAFLET",
													 $output_array[1]." - ".$path,
													 $result
													);		
			
			#
			# SECTIONS
			if(SHOW_DEBUG===true) {
				$ar_section_tipo = RecordObj_dd::get_ar_terminoID_by_modelo_name('section');
				$ar_sections = array();
				foreach ($ar_section_tipo as $current_section_tipo) {
					#$approximate_row_coun = tool_administration::get_approximate_row_count($current_section_tipo);
					$ar_sections[$current_section_tipo] = RecordObj_dd::get_termino_by_tipo($current_section_tipo)." "; // ($approximate_row_coun)
				}
				$html .= tool_administration::show_info( "SECTIONS",
														 count($ar_section_tipo),
														 $ar_sections
														);
			}


			#
			# DB TABLES
			if(SHOW_DEBUG===true) {
				$tables = (array)backup::get_tables();
				$ar_tables=array();
				foreach ($tables as $current_table) {
					$approximate_row_count = tool_administration::get_approximate_row_count($current_table);
					$ar_tables[] = "$current_table ($approximate_row_count)";
				}
				$html .= tool_administration::show_info( "DB TABLES",
														 "",
														 $ar_tables
														);
			}



			#
			# DB DATA CHECK
			if(SHOW_DEBUG===true) {
				require(DEDALO_LIB_BASE_PATH.'/db/class.data_check.php');
				$data_check = new data_check();
				$response 	= $data_check->check_sequences();
				if ($response->result!=true) {
					#debug_log(__METHOD__." $response->msg ".to_string(), logger::WARNING);
					if(SHOW_DEBUG===true) {
						#die("Error on ".$response->msg);
					}
				}
				$html .= tool_administration::show_info( "DB SEQUENCES STATE",
														 "",
														 $response->msg
														);
			}


			#
			# DB DATA CHECK
			if(SHOW_DEBUG===true) {
				#require_once(DEDALO_LIB_BASE_PATH.'/db/class.counter.php');				
				$response 	= counter::check_counters();
				if ($response->result!==true) {
					#debug_log(__METHOD__." $response->msg ".to_string(), logger::WARNING);
					if(SHOW_DEBUG===true) {
						#die("Error on ".$response->msg);
					}
				}
				$html .= tool_administration::show_info( "DEDALO COUNTERS STATE",
														 "",
														 $response->msg
														);
			}


		$html   .= "</ul>";//end list-group


		#$html   .= "  </div>";//end panel-body		
		$html   .= "</div>";//end #system_info_content
	

	$html .= "\n</div><!-- /content_data block-content-2 -->";





	#
	# PHP INFO
	$html   .= "\n<div class=\"content_data block-content-3\" >";
	$html   .= "<div class=\"panel panel-info\">";

		$html   .= "  <div class=\"panel-heading\">";
		$html   .= "    <h3 class=\"panel-title\"> PHP INFO </h3>";
		$html   .= "  </div>";
		
		$html   .= "<ul class=\"list-group panel-body\" style=\"display:none\">";

			#
			# PHPINFO
			$html   .= "<li>";
			$html   .= "\n<iframe id=\"phpinfo\"
			src=\"".DEDALO_LIB_BASE_URL."/tools/tool_administration/html/phpinfo.php\"
			frameborder=\"0\"
			scrolling=\"no\"
			onload=\"resizeIframe(this)\"
			></iframe>";
			$html   .= "</li>";

		$html   .= "</ul>";//end list-group
	
	$html   .= "</div>";//end #php_info_content
	$html .= "\n</div><!-- /content_data block-content-3 -->";		



	$html .= "\n</div><!-- /wrap_tool -->"; //wrap_tool

	

	print $html;
		
?>