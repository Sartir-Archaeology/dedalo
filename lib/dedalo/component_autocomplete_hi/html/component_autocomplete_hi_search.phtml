<?php

	# VISUALIZADOR HTML		
		
	
	print "<div class=\"wrap_component css_wrap_autocomplete_hi wrap_autocomplete_hi_search tooltip_active\" id=\"{$id_wrapper}\" ";
	print "data-component_name=\"{$component_name}\" ";
	print "data-modo=\"{$modo}\" ";
	print "data-dato='".json_encode($dato)."' ";
	print 'title="'.search_development2::search_options_title( $this->search_operators_info() ).'" ';
	print ">";
	
	# ETIQUETA (LABEL)
	$html_label = component_common_draw::draw_label($this);
	
	# CONTENIDO (INPUT)
	$html_content = '';
	switch($permissions) {
			
		case 0	:
				$html_content .= "";
				break;
						
		case 1	:
		case 2	:
		case 3	:
				# COMPARISON OPERATORS
				#$html_content .= operator::get_search_comparison_operators_html($tipo,$ar_comparison_operators);
				
				
				#
				# ROW
				$html_content .= "<ul class=\"css_autocomplete_hi_valor in_search_mode\">";
				foreach ($ar_valor as $current_value => $value) {

					$html_content .= "<li>";

					# BTN DELETE
					$html_content .= "<div class=\"icon_bs link css_autocomplete_hi_button_delete\" ";
					$html_content .= "data-tipo=\"{$tipo}\" ";
					$html_content .= "data-current_value='$current_value' ";
					$html_content .= "data-role=\"autocomplete_hi_button_delete\" ";
					$html_content .= "title=\"$label $parent\" ";
					$html_content .= "onclick=\"component_autocomplete_hi.delete(this)\"></div>";

					# VALUE . STRING RESOLVED TO SHOW
					$html_content .= $value;
					if(SHOW_DEBUG===true) {
						#$html_content .= " <span class=\"notes\">$current_value</span>";
					}

					$html_content .= "</li>";
				}
				$html_content .= "</ul>";

				$hierarchy_types_json 	 = json_encode($hierarchy_types);
				$hierarchy_sections_json = json_encode($hierarchy_sections);

				# SOURCE_MODE SWITCH
				switch ($source_mode) {
					case 'tree':

						# BTN NEW ELEMENT
						$html_content .= "<div class=\"icon_bs link new_autocomplete_hi in_search_mode\" ";
						$html_content .= "data-id_wrapper=\"$id_wrapper\" ";
						$html_content .= "data-hierarchy_types='{$hierarchy_types_json}' ";
						$html_content .= "data-hierarchy_sections='{$hierarchy_sections_json}' ";
						$html_content .= "data-component_name=\"{$component_name}\" ";
						$html_content .= "onclick=\"component_common.open_ts_window(this)\"></div>";
						break;
					
					case 'autocomplete':
					default:
				
						#
						# INPUT SEARCH FIELD
						$html_content .= "<input class=\"css_autocomplete_hi_search_field in_search_mode\" type=\"text\" placeholder=\"".label::get_label('buscar')."...\" ";
						$html_content .= "data-id_wrapper=\"$id_wrapper\" ";
						$html_content .= "data-tipo=\"$tipo\" ";
						$html_content .= "data-hierarchy_types='{$hierarchy_types_json}' ";
						$html_content .= "data-hierarchy_sections='{$hierarchy_sections_json}' ";
						$html_content .= "onfocus=\"component_autocomplete_hi.activate(this)\" ";
						$html_content .= "tabindex=\"1\" ";
						$html_content .= "autocomplete=\"off\" ";
						$html_content .= "autocorrect=\"off\" ";
						$html_content .= "/>";

						# Reset var 'activated' on load
						#$html_content .= "<script>component_autocomplete_hi.activated={}</script>";

						#
						# OPTIONS
						if ($ar_filter_options!==false) {
						
							$html_content .= "<div class=\"icon_bs toponymy_list_button_options in_search_mode edit_hidden\" onclick=\"component_autocomplete_hi.toggle_toponymy_list(this)\"></div>";

							$cookie_name = 'toponymy_list_'.$section_tipo .'_'. $tipo;
							$html_content .= "<ul class=\"toponymy_list text_unselectable\">";
							#$html_content .= "<div class=\"toponymy_list_close\">X</div>";
							$html_content .= "<li><input type=\"checkbox\" id=\"select_all_{$tipo}\" onchange=\"component_autocomplete_hi.select_all_hierarchy_sections(this,'$cookie_name')\"> <label for=\"select_all_{$tipo}\">".label::get_label('todos')."</label></li><hr>";
							foreach ((array)$ar_filter_options as $fo_key => $fo_label) {
								$current_id = md5($fo_key);
								$html_content .= "<li>";
								$html_content .= "<input type=\"checkbox\" value='".$fo_key."' id=\"$current_id\" checked onchange=\"component_autocomplete_hi.save_hierarchy_sections(this,'$cookie_name')\">";
								$html_content .= "<label for=\"$current_id\">$fo_label</label>";
								$html_content .= "</li>";
							}
							$html_content .= "</ul>";

						}//end if ($ar_filter_options!==false)
						
						# JAVASCRIPT
						$html_content .= "<script>";
						# Reset var 'activated' on load
						$html_content .= "component_autocomplete_hi.activated={};";
						# Init component
						$html_content .= "component_autocomplete_hi.init({\"wrapper_id\":\"$id_wrapper\",\"cookie_name\":\"$cookie_name\",\"limit\":\"$limit\"});";
						$html_content .= "</script>";
						break;
				}//end switch ($source_mode)




				#
				# TREE RESOLUTION STATS
				#$html_content .= "<div id=\"autocomplete_hi_tree_stats_{$tipo}\" class=\"css_autocomplete_hi_tree_stats\"> Calculating.. </div>";

				# INPUT DATA HIDDEN
				$html_content .= "<input type=\"text\" name=\"{$search_input_name}\" class=\"css_autocomplete_hi_dato_hidden\" style=\"width:300px;\" ";
				$html_content .= "data-tipo=\"{$tipo}\" ";
				$html_content .= "data-section_tipo=\"{$section_tipo}\" ";
				$html_content .= "data-parent=\"{$parent}\" ";
				$html_content .= "data-lang=\"{$lang}\" ";
				$html_content .= "data-link_fields='{$ar_link_fields}' ";
				$html_content .= "data-role=\"autocomplete_hi_dato_hidden\" ";
				$html_content .= "data-role=\"autocomplete_hi_dato_hidden\" ";
				$html_content .= "data-limit=\"$limit\" ";
				$html_content .= "data-options_type=\"$options_type\" ";
				$html_content .= "/>";

				if(SHOW_DEBUG===true) {
					#$html_content .= "<span class=\"css_span_debugger\" id=\"debugger_{$parent}\" >{$debugger}</span>";
					#$html_content .= "<div class=\"debug_info notes\">". json_encode($propiedades) ."</div>";
				}
				

				# LOGICAL OPERATORS
				#$html_content .= operator::get_search_logical_operators_html($tipo,$ar_logical_operators);


				if(SHOW_DEBUG===true) {
					$html_content .= "<span class=\"debug_info\">$search_input_name</span>";
				}

				break;											
	}

	# Prepare content to show in page
	tools::prepare_content($html_content);
	
	
	# PRINT HTML
	print $html_label;
	print $html_content;	
	
	
	print "</div>";
	#<!-- /css_wrap_autocomplete_hi COMPONENT_AUTOCOMPLETE_hi [tipo:$tipo id_matrix:$parent] $label -->"; //wrap
?>