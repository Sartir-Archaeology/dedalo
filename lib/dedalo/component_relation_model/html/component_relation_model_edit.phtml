<?php

	# VISUALIZADOR HTML


	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'in');

	print "<div class=\"wrap_component css_wrap_relation_model wrap_component_{$modo} wrap_component_{$tipo}\" id=\"{$id_wrapper}\" ";
	print "data-tipo=\"{$tipo}\" ";
	print "data-lang=\"{$lang}\" ";
	print "data-parent=\"{$parent}\" ";
	print "data-section_tipo=\"{$section_tipo}\" ";
	print "data-modo=\"{$modo}\" ";
	#print "data-dato='{$dato_string}' ";
	print "data-component_name=\"{$component_name}\" ";
	print "data-component_info='{$component_info}' ";
	print "data-search_tipos='".json_encode($search_tipos)."' ";
	print ">";

	# ETIQUETA (LABEL)
	$html_label = component_common_draw::draw_label($this);

	# CONTENIDO (INPUT)
	$html_content = '';
	switch($permissions) {

		case 0 :
				$html_content .= "";
				break;

		case 1 :
				$html_content .= $this->valor;
				break;

		case 2 :
		case 3 :

				#
				# CONTEXT
				# Set as disabled on time machine context 
				$disabled = (isset($context->context_name) && $context->context_name==='tool_time_machine') ? 'disabled="disabled"' : '';

				$html_content .= "<select class=\"css_relation_model\" ";
				$html_content .= "onchange=\"component_relation_model.Save(this)\" ";
				$html_content .= "onfocus=\"component_common.select_wrap(null,'$id_wrapper');\" ";
				$html_content .= "name=\"{$input_name}\" ";
				$html_content .= "data-tipo=\"{$tipo}\" ";
				$html_content .= "data-lang=\"{$lang}\" ";
				$html_content .= "data-section_tipo=\"{$section_tipo}\" ";
				$html_content .= "data-parent=\"{$parent}\" ";
				$html_content .= "title=\"$html_title\" ";
				$html_content .= "$disabled ";
				$html_content .= "tabindex=\"1\" ";
				$html_content .= "> ";

				$selected = empty($dato) ? 'selected' : '';
				
				$html_content .= " <option value=\"\" {$selected}> </option>";

				foreach ($ar_list_of_values->result as $key => $item) {

					$label   = (string)$item->label;
					$locator = (object)$item->value;

					# Add fixed type
					$locator->type = DEDALO_RELATION_TYPE_MODEL_TIPO;

					$founded  = locator::in_array_locator( $locator, $ar_locator=$dato, $ar_properties=array('section_id','section_tipo','type') );
					$selected = $founded ? 'selected' : '';

					$locator_json = json_encode($locator);

					$html_content .= "<option value='". $locator_json ."' {$selected}>";
					$html_content .= $label;					
					
					$html_content .= "</option>";
				}
				$html_content .= " </select>";


				if(SHOW_DEBUG===true) {
					#$html_content .= " <div class=\"debug_info\"> Current val: <strong>$valor</strong></div>";				
					#$html_content .= " <span class=\"css_span_debugger\" id=\"debugger_{$tipo}\">{$debugger}</span>";
					$html_content .= " <span class=\"debug_info\">";
					$html_content .= "<br> locators in section relation (model.tipo: ".DEDALO_RELATION_TYPE_MODEL_TIPO."): ";
					$html_content .= wrap_pre( to_string($this->get_my_section_relations(DEDALO_RELATION_TYPE_MODEL_TIPO)), false );
					$html_content .= "</span>";
				}

				#
				# JS Init component
				$html_content .= '<script>';
				# Init component
				$init_options = new stdClass();
					$init_options->component_name 	= $component_name;
					$init_options->id_wrapper 		= $id_wrapper;
					$init_options->uid 				= $identificador_unico;
				$html_content .= 'component_common.init('.json_encode($init_options).');';
				$html_content .= '</script>';
				break;
	}

	# Prepare content to show in page
	tools::prepare_content($html_content);


	# PRINT HTML
	print $html_label;
	print $html_content;

	#if(SHOW_DEBUG===true) {
	#	echo $ar_list_of_values->debug;
	#}

	print "</div>"; //wrap

	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'out');

	
?>