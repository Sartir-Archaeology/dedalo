<?php

	# VISUALIZADOR HTML	

		
	# CONTENIDO
	$html_contenido = '';
	switch($permissions) {
			
		case 0	:	$html_contenido .= "";
					break;
						
		case ($permissions>=1) :

					#
					# LIST ROWS
					#
					#$html_contenido .= "<div id=\"section_list_rows_content_div_{$this->tipo}\" class=\"section_list_rows_content_div\" >";					
						$table ='';

						#$table .= "<div id=\"portal_div_{$tipo}\" class=\"\">";
						$table .= "<div id=\"portal_div_{$identificador_unico}\" class=\"\">";
						
						# ROWS (TD)
						$row_number=1; 	
						foreach ($rows_data->result as $key => $table_rows) {
						foreach ($table_rows as $current_id => $rows) {
							//echo "<hr> $current_id - ".print_r($rows,true);

							if ($this->html_options->rows_limit && $row_number > $this->html_options->rows_limit) {
								break; # Limit number of records to sowh
							}

							# REL_LOCATOR : The current_id can be id matrix or locator like object
								$rel_locator = $current_id;	// Default							
								if (isset($rows['lc_object'])) { // Locator object
									$rel_locator = $rows['lc_object'];
									$rel_locator = json_handler::encode($rel_locator);
									if(SHOW_DEBUG) {
										#dump($rel_locator," rel_locator from lc_object ");
									}
								}

							# ROW
								$id = $rows['id'];
								if (empty($id)) {
									dump("Se ha recibido un row de id 0 en component portal edit. Se ha omitido pero algo va mal, probablemente haya un proyecto de parent 0 creado por error");
									continue;
								}

							# SECTION ID
								$section_id = $rows['section_id'];


							# COLUMNS
								$table .= "<div class=\"\">";
								foreach ($ar_columns as $column_tipo => $column_label) {
									if($column_tipo=='edit') continue;
									
									$modelo_name 	 = RecordObj_dd::get_modelo_name_by_tipo($column_tipo, true);

									# Row value
									if (!isset($rows[$column_tipo])) {
										$table .= "<div class=\"\">";
										$table .= ""; // User with NO access to this column
										$table .= "</div>";
										continue;
									}
									$value = $rows[$column_tipo];

									switch ($modelo_name) {
										case 'component_portal':
											#if (empty($value)) break; // Avoid resolve empty portals
											# Portal with locators
											$parent 		 = null; // id / null
											$component_portal = component_common::get_instance($modelo_name, $column_tipo, $parent, 'list', DEDALO_DATA_NOLAN, $section_tipo);
											$component_portal->html_options->rows_limit	= 1;
											if ($parent===null) {
												# Use already query calculated values for speed
												$ar_records   = (array)json_handler::decode($value);	#dump($ar_records,"ar_records for portal $column_tipo - id:$id");#die();
												$component_portal->set_dato($ar_records);
												$component_portal->set_identificador_unico($component_portal->get_identificador_unico().'_'.$id); // Set unic id for build search_options_session_key used in sessions
											}
											$value = $component_portal->get_html();
											break;
										
										case ( $modelo_name=='component_autocomplete' ):
										case ( $modelo_name=='component_radio_button' ):
										case ( $modelo_name=='component_check_box' ):
										case ( $modelo_name=='component_select' ):
										case ( $modelo_name=='component_relation' ):
											#if (empty($value)) break; // Avoid resolve empty vars
											$parent 		   = null;	//null;
											$current_component = component_common::get_instance($modelo_name, $column_tipo, $parent, 'list', DEDALO_DATA_NOLAN, $section_tipo);
											# Use already query calculated values for speed
											$ar_records   = (array)json_handler::decode($rows[$column_tipo]);	#dump($ar_records,"ar_records for portal $column_tipo - id:$id");#die();
											$current_component->set_dato($ar_records);
											$current_component->set_identificador_unico($current_component->get_identificador_unico().'_'.$id); // Set unic id for build
											$value = $current_component->get_valor();
											break;
										case ($modelo_name=='component_text_area'):
											$obj_value = json_decode($rows[$column_tipo]); # Evitamos los errores del handler accediendo directamente al json_decode de php
											$current_tag = 0;
											if (is_object($obj_value) && isset($obj_value->$current_tag)) {
												$value = $obj_value->$current_tag;
											}else{
												$value = $rows[$column_tipo];
											}
											break;
										/**/										
									}


									# aditional td css selectors
									$td_css_selector = 'td_'.$modelo_name;

									$table .= "<div class=\"$td_css_selector\">";
									$table .= $value;
									$table .= "</div>";
																			

								}//end foreach
								$table .= "</div>";	
						
						$row_number++;

						}//END foreach ($table_rows as $current_id => $rows)
						}//END foreach ($rows_data->result as $key => $table_rows)
					

						$table .= '</div>';

						$html_contenido .= $table;

					
					#$html_contenido .= "</div>";
					break;

	}

	if(SHOW_DEBUG && !empty($rows_data->result)) {
		#dump($this, ' this 1 ');
		$limit_time=SLOW_QUERY_MS/10;
		$html_info='';
		#dump($rows_data,"");
		$total_list_time = $rows_data->generated_time['get_records_data'] + round(microtime(1)-$start_time,3);
		$style='';
		if ($total_list_time>$limit_time) {
			$style = "color:red";
		}			
		$html_info .= "<div class=\"portal_debug_info\" style=\"{$style}\" onclick=\"$(this).children('pre').toggle()\"> Time: ";
		$html_info .= $total_list_time;
		#$html_info .= ", get_rows_data:".$rows_data->generated_time['get_rows_data']." (over {$rows_data->options->full_count} records)";
		#$html_info .= ", HTML section list: ".round(microtime(1)-$start_time,3);
		if (isset($rows_data->generated_time['rows_paginator'])) {
			#$html_info .= ", rows_paginator: ".$rows_data->generated_time['rows_paginator'];
		}			
		if (isset($rows_data->generated_time['rows_header'])) {
			#$html_info .= ", rows_header: ".$rows_data->generated_time['rows_header'];
		}
		if (isset($rows_data->generated_time['rows'])) {		
			#$html_info .= ", rows: ".$rows_data->generated_time['rows'];
		}
		#dump($rows_data->options->search_options_session_key," ");
		if (isset($rows_data->options->search_options_session_key)) {		
			#$html_info .= ", ".$rows_data->options->search_options_session_key;
		}
		$html_info .= "";
		$html_info .= "<pre style=\"display:none\"> ".$rows_data->options->search_options_session_key;
		$html_info .= " ".$rows_data->strQuery ."</pre>";
		$html_info .= "</div>";
		#echo "<div> Time To Generate section list: HTML: ".round(microtime(1)-$start_time,3)."</div>";
			
		$html_contenido .= $html_info;
	}#end if(SHOW_DEBUG)
	
	
	print $html_contenido;


?>
