<?php

	# VISUALIZADOR HTML	

	# ELEMENTOS
	if(!isset ($ar_css['css_span_dato'])) 		$ar_css['css_span_dato']='';
	if(!isset ($ar_css['css_wrap_portal'])) 	$ar_css['css_wrap_portal']='';
	if(!isset ($html_tools))					$html_tools='';
	
	
	print "\n<!-- PORTAL [tipo:$tipo section_id_matrix:$parent] $label -->";
	print "\n <div class=\"css_wrap_portal wrap_component {$ar_css['css_wrap_portal']}\" id=\"{$id_wrapper}\"
	data-tipo=\"{$tipo}\"
	data-lang=\"{$lang}\"
	data-section_tipo=\"{$section_tipo}\"
	data-parent=\"{$parent}\"
	data-modo=\"{$modo}\"
	data-component_name=\"{$component_name}\"
	data-component_info='{$component_info}'
	data-dato='{$valor}'
	data-target_section_tipo=\"{$target_section_tipo}\"
	>";
	
		
		# ETIQUETA (LABEL)
		$html_label = component_common_draw::draw_label($this);
		
		# CONTENIDO (INPUT)
		$html_contenido = '';
		switch($permissions) {
				
			case 0	:	$html_contenido .= "";
						break;
							
			#case 1	: 	$html_contenido .= "\n <span class=\"css_span_dato {$ar_css['css_span_dato']}\">$valor</span>";
			#			break;	
							
			case ($permissions>=1)	:


						#
						# HEADER ROW HTML
							#$html_contenido .= "\n<div class=\"portal_header_row \">";
						
							#
							# BUTTONS
							if ($this->html_options->buttons && ($show_button_new===true || empty($dato)) ) {
								
								# BUTTON NEW HTML
								if( $permissions>=2 && $modo!='print') {

									$button_new = "\n<div class=\"css_button_generic btn_new_ep\" 
									data-portal_tipo=\"{$this->tipo}\" 
									data-portal_parent=\"{$this->parent}\"
									data-target_section_tipo=\"{$target_section_tipo}\" 
									onclick=\"component_portal.new_portal_record(this)\"
									title=\"parent:$parent - tipo:$tipo\" >";								
									$button_new .= '+ '. ucfirst(label::get_label('nuevo')) ;#. " $label" ;
									$button_new .= "</div>";

									if (SHOW_DEBUG) {
										$button_new .= "<span class=\"debug_info\">parent:$parent - tipo:$tipo </span>";
									}
									$html_contenido .= $button_new;
								}								

								# BUTTON SELECT EXISTING RECORD HTML (BUTTON TOOL_PORTAL)
								if($modo!='print') {
									
									$button_select = "\n<div class=\"css_button_generic btn_new_ep\" 
									data-tipo=\"{$tipo}\"
									data-top_tipo=\"".TOP_TIPO."\"
									data-parent=\"{$parent}\"
									data-section_tipo=\"{$section_tipo}\"						
									onclick=\"tool_common.open_tool_portal(this)\"
									title=\"parent:$parent - tipo:$tipo\" >";
									$button_select .= '+ '. ucfirst(label::get_label('existente')) ;

									if(SHOW_DEBUG) {
										$button_select .= ' '.TOP_TIPO.'.'.$target_section_tipo.'.'.$this->tipo;
									}
									$button_select .= "</div>";

									if (SHOW_DEBUG) {
										$button_select .= "<span class=\"debug_info\">parent:$parent - tipo:$tipo </span>";
									}
									$html_contenido .= $button_select;
								}								

							}//END if ($show_button_new===true || !is_array($dato))
							
							#$html_contenido .= "</div><!-- /portal_header_row -->";


						#
						# SECTION HTML (LIST ROWS)
						#
						$html_contenido .= "<div id=\"section_list_rows_content_div_{$this->tipo}\" class=\"section_list_rows_content_div\" >";

						$table_add_class = empty($rows_data->result) ? 'table_rows_list_empty' : null;
												
						$table = "<table id=\"portal_table_{$tipo}\" class=\"table_rows_list  $table_add_class\">";
						$table .= "<tbody>";
						

						# HEADERS (TH)
						if ($this->html_options->header) {
						
							$table .= "<thead>";
							$table .= "<tr>";
							foreach ($ar_columns as $column_tipo => $column_label) {
								if ($column_tipo=='edit' && !$this->html_options->id_column) continue;
								$table .= "<th><div class=\"th_title\" title=\"$column_label\">$column_label</div></th>";
							}
							$table .= "</tr>";
							$table .= "</thead>";
						}//end if ($this->html_options->header)

						#dump($rows_data->result," ");
	
						# ROWS (TD)
						$row_number=1;
						if ($this->html_options->rows && !empty($rows_data->result)) {
						foreach ($rows_data->result as $key => $table_rows) {
						foreach ($table_rows as $current_id => $rows) {
							//echo "<hr> $current_id - ".print_r($rows,true);

							if ($this->html_options->rows_limit && $row_number > $this->html_options->rows_limit) {
								break; # Limit number of records to sowh
							}

							# REL_LOCATOR : The current_id can be id matrix or locator like object
								$rel_locator = $current_id;	// Default							
								if (isset($rows['lc_object'])) { // Locator object
									$rel_locator = $rows['lc_object'];
									$rel_locator = json_handler::encode($rel_locator);
									if(SHOW_DEBUG) {
										#dump($rel_locator," rel_locator from lc_object ");
									}
								}

							# ROW
								$section_id = $rows['id']; 	#dump($section_id," id");
								if (empty($section_id)) {
									dump("Se ha recibido un row de id 0 en component portal edit. Se ha omitido pero algo va mal, probablemente haya un proyecto de parent 0 creado por error");
									continue;
								}

							# SECTION ID
								$section_id = $rows['section_id'];


							# COLUMNS
								#dump($rows['rsc29']," rows");
								$table .= "<tr class=\"tr_sortable\" data-dato='$rel_locator'>";
								#foreach ((array)$rows as $key => $current_value) {

								foreach ($ar_columns as $column_tipo => $column_label) {										

									#
									# EDIT COLUMN
									if ($column_tipo=='edit') {
										if (!$this->html_options->id_column) continue;

										$table .= "<td class=\"id_column\">";

										#
										# EDIT BUTTON
											$context_http_query = http_build_query($context);
											$url  = htmlspecialchars("?t=$target_section_tipo&id=$section_id&m=edit&{$context_http_query}");
											$url .= "&top_tipo=".TOP_TIPO."&top_id=".TOP_ID;
											$url .= "&exclude_elements=".$exclude_elements;

											# Breadcrumb : add bc_path = url vars
											$bc_path = tools::get_bc_path();
												#dump($bc_path, ' bc_path');
											$url 	.= "&bc_path=". base64_encode($bc_path);

											# id_path
											$id_path = tools::get_id_path($section_tipo.'.'.$section_id);
												#dump($section_id_path,"id_path - $section_id");
											$url 	.= "&id_path=". $id_path;

											$title 	= "Goto resource section_id $section_id [$target_section_tipo]";
											if(SHOW_DEBUG) $title .= "\n url:$url \n modo $modo, context $context->context_name";
											$table .= "<div class='button_edit div_image_link link' title=\"$title\" onclick=\"window.open('$url', '_blank', 'toolbar=0,location=0,menubar=0')\"></div>";
											
										#
										# DELETE RECORD BUTTON
											if ($permissions>=2) {
												$btn_title	 = label::get_label('borrar') .' '. label::get_label('recurso');
												$table 		.= " <div class=\"delete_portal_link icon_bs link image_delete_icon\"
										    	data-rel_locator='$rel_locator'
										    	title=\"$btn_title\"
										    	onclick=\"$('#delete_dialog_portal').data('button_obj',this).dialog('open')\"
										    	></div>";
											}

										if(SHOW_DEBUG) {
											# ID MATRIX
											$table .= "<br><mark class=\"row_debug_info\">$current_id</mark>";
										}

										$table .= "</td>";


									# COMPONENTS COLUMNS
									}else{

										$modelo_name = RecordObj_dd::get_modelo_name_by_tipo($column_tipo, true);

										# Row value default
										/*if (!isset($rows[$column_tipo])) {
											$table .= "<td class=\"\">";
											$table .= ''; // User with NO access to this column
											$table .= "</td>";
											continue;
										}	*/									
										$value = $rows[$column_tipo];
										#dump($rows,"rows $this->tipo");

										# Row value overwrite on special cases
										switch (true) {

											# COMPONENTS WITH LOCATORS
											case ($modelo_name=='component_autocomplete'):
											case ($modelo_name=='component_radio_button'):
											case ($modelo_name=='component_check_box'):
											case ($modelo_name=='component_select'):
											case ($modelo_name=='component_relation'):

												$parent 		   = $section_id; // $section_id / null
												$current_component = component_common::get_instance($modelo_name,$column_tipo,$parent,'list',DEDALO_DATA_NOLAN,$target_section_tipo);	
													#dump($target_section_tipo, ' target_section_tipo');
												#$current_component->html_options->rows_limit	= 1;
												#if ($parent===null) {
													# Use already query calculated values for speed
													$ar_records   = (array)json_handler::decode($value);	#dump($ar_records,"ar_records for portal $current_component_tipo - id:$section_id");#die();
													$current_component->set_dato($ar_records); 				#dump($value, 'ar_records');
													$current_component->set_identificador_unico($current_component->get_identificador_unico().'_'.$section_id); // Set unic id for build search_options_session_key used in sessions
												#}
												$value = $current_component->get_html();
												break;

											# COMPONENT_TEXT_AREA
											case ($modelo_name=='component_text_area' && !empty($value)):
												
												#dump($value," value");
												#dump($rows['lc_object'],"lc_object ");
												
												# TO VERIFY THIS SELECTOR..
												$rel_locator = $rows['lc_object'];	//(object)json_handler::decode($rel_locator);

												if (!property_exists($rel_locator, 'tag_id')) {										
													$ar_records = (array)json_handler::decode($value);
													$value 		= reset($ar_records);
												}
												break;

											# COMPONENT_PORTAL
											case ($modelo_name=='component_portal' && !empty($value)):
												# Portal with locators
												$parent 		 = null; // $section_id / null
												$component_portal = component_common::get_instance('component_portal',$column_tipo,$parent,'list',DEDALO_DATA_NOLAN,$target_section_tipo);
												$component_portal->html_options->rows_limit	= 1;
												if ($parent===null) {
													# Use already query calculated values for speed
													$ar_records   = (array)json_handler::decode($value);	#dump($ar_records,"ar_records for portal $current_component_tipo - id:$section_id");#die();
													$component_portal->set_dato($ar_records);
													$component_portal->set_identificador_unico($component_portal->get_identificador_unico().'_'.$section_id); // Set unic id for build search_options_session_key used in sessions
												}
												$value = $component_portal->get_html();
												break;

										}//end switch (true)

										# aditional td css selectors										
										$td_css_selector = 'td_'.$modelo_name;

										# TD COLUMN
										$table .= "<td class=\"$td_css_selector\">";
										$table .= $value;										
										$table .= "</td>";

									}//end if ($modelo_name=='component_portal')

								}//end foreach ($ar_columns as $column_tipo => $column_label)
								$table .= "</tr>";	

						
						$row_number++;


						}//END foreach ($table_rows as $current_id => $rows)
						}//END foreach ($rows_data->result as $key => $table_rows)
						}//end if ($this->html_options->header)


						# When no result, Empty row is render for drag
						if (empty($rows_data->result)) {
							#$table .= "<tr><td colspan=\"".count($ar_columns)."\"></td></tr>";
						}						

						$table .= "</tbody>";
						$table .= '</table>';

						$html_contenido .= $table;

						
						$html_contenido .= "</div>";



						#
						# DRAG ACTIVATE (for current table)
						#
						if ($this->html_options->sortable) {
							$html_contenido .= "<script>component_portal.active_portal_table_sortable('portal_table_{$tipo}', '$dragable_connectWith')</script>";
						}
						break;
												
		}

		# Prepare content to show in page
		tools::prepare_content($html_contenido);	
		

		# PRINT HTML
		if ($show_button_new && $this->html_options->buttons) {
			print $html_label;
		}

		if(SHOW_DEBUG && !empty($rows_data->result)) {
			#dump($this, ' this 1 ');
			$limit_time=SLOW_QUERY_MS/10;
			$html_info='';
			#dump($rows_data,"");
			$total_list_time = $rows_data->generated_time['get_rows_data'] + round(microtime(1)-$start_time,3);
			$style='';
			if ($total_list_time>$limit_time) {
				$style = "color:red";
			}			
			$html_info .= "<div class=\"portal_debug_info\" style=\"{$style}\" onclick=\"$(this).children('pre').toggle()\"> Time: ";
			$html_info .= $total_list_time;
			#$html_info .= ", get_rows_data:".$rows_data->generated_time['get_rows_data']." (over {$rows_data->options->full_count} records)";
			#$html_info .= ", HTML section list: ".round(microtime(1)-$start_time,3);
			if (isset($rows_data->generated_time['rows_paginator'])) {
				#$html_info .= ", rows_paginator: ".$rows_data->generated_time['rows_paginator'];
			}			
			if (isset($rows_data->generated_time['rows_header'])) {
				#$html_info .= ", rows_header: ".$rows_data->generated_time['rows_header'];
			}
			if (isset($rows_data->generated_time['rows'])) {		
				#$html_info .= ", rows: ".$rows_data->generated_time['rows'];
			}
			#dump($rows_data->options->search_options_session_key," ");
			if (isset($rows_data->options->search_options_session_key)) {		
				$html_info .= ", ".$rows_data->options->search_options_session_key;
			}
			$html_info .= "";
			$html_info .= "<pre style=\"display:none\"> ".$rows_data->strQuery ."</pre>";
			$html_info .= "</div>";
			#echo "<div> Time To Generate section list: HTML: ".round(microtime(1)-$start_time,3)."</div>";
				
			$html_contenido .= $html_info;
		}#end if(SHOW_DEBUG)
		
		print $html_contenido;
	
	
	print "\n</div><!-- /css_wrap_portal [tipo:$tipo section_id_matrix:$parent] $label -->\n"; //wrap


?>
