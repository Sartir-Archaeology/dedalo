<?php

	# VISUALIZADOR HTML	
	
	
	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'in');


	$wrap_style = isset($wrap_style) ? $wrap_style : '';
	print " <div class=\"wrap_component css_wrap_portal wrap_component_{$modo} wrap_component_view_{$edit_view} wrap_component_{$tipo}\" id=\"{$id_wrapper}\"
	style=\"$wrap_style\"
	data-tipo=\"{$tipo}\"
	data-lang=\"{$lang}\"
	data-section_tipo=\"{$section_tipo}\"
	data-parent=\"{$parent}\"
	data-modo=\"{$modo}\"
	data-component_name=\"{$component_name}\"
	data-component_info='{$component_info}'
	data-dato='{$dato_json}'
	data-target_section_tipo='{$ar_target_section_tipo_json}'
	>";
	
		
		# ETIQUETA (LABEL)
		$html_label = component_common_draw::draw_label($this);

		
		# CONTENIDO (INPUT)
		$html_content = '';

		switch(true) {
				
			case ($permissions<1):
				$html_content .= "";
				break;
							
			case ($permissions>=1):

				#
				# HEADER ROW HTML
					#$html_content .= "<div class=\"portal_header_row \">";				
				
					#
					# BUTTONS
					if ($this->html_options->buttons && ($show_button_new===true || empty($dato)) ) {
						
						#
						# BUTTON NEW HTML
						if( $permissions>=2 && $modo!='print') {

							foreach ($ar_target_section_tipo as $current_target_section_tipo) {
								
								# Permissions of target section. Apply to current button									
								$permission_section = common::get_permissions($current_target_section_tipo,$current_target_section_tipo);
								if ($permission_section<2) {
									# Skip create new records in target section
									continue;
								}

								$button_new = "<div class=\"css_button_generic btn_new_ep\" onclick=\"component_portal.new_portal_record(this)\"
								data-portal_tipo=\"{$this->tipo}\" 
								data-portal_parent=\"{$this->parent}\"
								data-portal_section_tipo=\"{$this->section_tipo}\"
								data-target_section_tipo=\"{$current_target_section_tipo}\"
								title=\"parent:$parent - tipo:$tipo\" >";
								$button_new .= "<div class=\"icon_bs link new_portal_record\"></div> ";
								$button_new .= "<span>";
								$button_new .= ''. RecordObj_dd::get_termino_by_tipo($current_target_section_tipo, DEDALO_DATA_LANG);	//.': '.label::get_label('nuevo');#. " $label" ;
								$button_new .= "</span>";
								$button_new .= "</div>";
								
								if(SHOW_DEBUG===true) {
									#$button_new .= "<span class=\"debug_info\">parent:$parent - tipo:$tipo </span>";
								}

								$html_content .= $button_new;
								break; // Only first for now
							}
						}

						#
						# BUTTON SELECT EXISTING RECORD HTML (BUTTON TOOL_PORTAL)
						if($modo!='print') {
							
							foreach ($ar_target_section_tipo as $current_target_section_tipo) {

								$button_select = "<div class=\"css_button_generic btn_new_ep\" onclick=\"tool_common.open_tool_portal(this)\"
								data-tipo=\"{$tipo}\"
								data-top_tipo=\"".TOP_TIPO."\"
								data-parent=\"{$parent}\"
								data-section_tipo=\"{$section_tipo}\"
								data-target_section_tipo=\"{$current_target_section_tipo}\"
								title=\"parent:$parent - tipo:$tipo\" >";
								$button_select .= "<div class=\"icon_bs link find_portal_record\"></div> ";
								$button_select .= "<span>";
								$button_select .= ''. RecordObj_dd::get_termino_by_tipo($current_target_section_tipo, DEDALO_DATA_LANG);	//.': '.label::get_label('existente');

								if(SHOW_DEBUG===true) {
									$button_select .= ' <span class="debug_info">'.TOP_TIPO.'.'.$current_target_section_tipo.'.'.$this->tipo.'</span>';
								}
								$button_select .= "</span>";
								$button_select .= "</div>";

								if(SHOW_DEBUG===true) {
									#$button_select .= "<span class=\"debug_info\">parent:$parent - tipo:$tipo </span>";
								}
								$html_content .= $button_select;

							}//end foreach ($ar_target_section_tipo as $current_target_section_tipo) {	
						}

														#
						# BUTTON SELECT EXISTING RECORD HTML (BUTTON TOOL_PORTAL)
						if($modo!='print') {

							$button_toggle_view = "<div class=\"btn_view_toogle\" onclick=\"component_portal.toggle_views(this)\"
							data-view=\"full\" >";

							if(SHOW_DEBUG===true) {
								#$button_toggle_view .= ' '.TOP_TIPO.'.'.$current_target_section_tipo.'.'.$this->tipo;
							}
							$button_toggle_view .= "</div>";

							$html_content .= $button_toggle_view;
						}
					}//end buttons if ($show_button_new===true || !is_array($dato))
					
					#$html_content .= "</div><!-- /portal_header_row -->";


				#
				# SECTION HTML (LIST ROWS)
				#
				# Wrap table div
				$html_content .= "<section class=\"portal_section\">";
				$html_content .= "<div id=\"section_list_rows_content_div_{$this->tipo}\" class=\"section_list_rows_content_div portal_table_wraper\">";

				# Table
				$table_add_class = empty($rows_data->result) ? 'table_rows_list_empty' : null;
				$table = "<table id=\"portal_table_{$tipo}\" class=\"table_rows_list table_portal_rows_list $table_add_class\">";
				

				#
				# HEADERS (TH)
				if ($this->html_options->header && !empty($rows_data->result)) {
				
					$table .= "<thead>";
					$table .= "<tr>";
					foreach ($ar_columns as $column_tipo => $column_label) {
						if ($column_tipo==='edit' && !$this->html_options->id_column) continue;
						# aditional td css selectors
							if ($column_tipo=='edit') {
								$td_css_selector = 'id_column';
							}else if ($column_tipo=='tag_id') {
								$td_css_selector = 'tag_id_column';
								$column_label 	 = '';
							}else{
								$modelo_name = RecordObj_dd::get_modelo_name_by_tipo($column_tipo, true);
								$td_css_selector = 'th_'.$modelo_name.' th_'.$column_tipo;


							}

						$th_style = '';
						# Overwrite default column width when need. Set component propiedades 'elements_list_mode' as you want, like edit..
						if (isset($propiedades->elements_list_mode->$column_tipo->column_width)) {
							$column_width = $propiedades->elements_list_mode->$column_tipo->column_width;
							$th_style = "width:$column_width";
						}						
							
						$table .= "<th class=\"$td_css_selector\" style=\"$th_style\">";
						$table .= " <div class=\"th_title\" title=\"$column_label\">$column_label</div>";
						# Absolute header th
						#$table .= " <div class=\"th_title th_title_abs\">$column_label</div>";
						$table .= "</th>";
					}
					$table .= "</tr>";
					$table .= "</thead>";
				}//end if ($this->html_options->header)

				#dump($rows_data->result," rows_data->result");

				
				
				#
				# ROWS (TD)
				$table .= "<tbody class=\"tbody\">";						
				
				$row_number=0; foreach((array)$dato as $key => $current_locator) {

					$row_number++;

					$current_section_id 	= $current_locator->section_id;
					$current_section_tipo 	= $current_locator->section_tipo;
					$current_component_tipo = isset($current_locator->component_tipo) ? $current_locator->component_tipo : null;
					$current_tag_id 		= isset($current_locator->tag_id) ? $current_locator->tag_id : null;

					$current_row = $this->row_in_result( $current_locator, $rows_data->result );						
						#dump($current_row, ' current_row ++ '.to_string());

					#
					# Limit showed rows
					if ($this->html_options->rows_limit && $row_number > $this->html_options->rows_limit) {
						break; # Limit number of records to sowh
					}

					#
					# REL_LOCATOR : locator like object								
						$rel_locator = json_encode($current_locator);

					#
					# ROW
						/*						
						if (empty($current_row['id'])) {
							if(SHOW_DEBUG===true) {
								#dump("Se ha recibido un row de id null en component portal edit. Se ha omitido pero algo va mal, probablemente haya un proyecto de parent 0 creado por error o se ha borrado un registro al cual el portal hace referencia","DEBUG INFO");										
							}									
							#continue;
						}
						*/

					#
					# SECTION ID
						$section_id 		 = $current_section_id;
						$target_section_tipo = $current_section_tipo;


					# Permissions of target section. Applied to delete button									
					$permission_section = common::get_permissions($target_section_tipo,$target_section_tipo);
					

					#
					# COLUMNS
						$sort_id = !empty($rel_locator) ? $rel_locator : 0;
						$table .= "<tr class=\"portal_element_sortable\" data-dato='$sort_id'>";															
						foreach ($ar_columns as $column_tipo => $column_label) {

							#
							# EDIT COLUMN
							if ($column_tipo==='edit') {
								if (!$this->html_options->id_column) continue;

								$table .= "<td class=\"id_column\">";

								# SECTION_ID TEXT
								#$table .= " $section_id ";

								#
								# EDIT BUTTON
									$context_http_query = http_build_query($context);
									$url  = htmlspecialchars("?t=$target_section_tipo&id=$section_id&m=edit&portal_section_tipo={$section_tipo}&{$context_http_query}");
									$url .= "&locator=". urlencode($rel_locator);
									$url .= "&top_tipo=".TOP_TIPO."&top_id=".TOP_ID;
									$url .= "&exclude_elements=".$exclude_elements;

									# Breadcrumb : add bc_path = url vars
									$bc_path = tools::get_bc_path();
										#dump($bc_path, ' bc_path');
									$url 	.= "&bc_path=". base64_encode($bc_path);

									# id_path
									$id_path = tools::get_id_path($section_tipo.'.'.$section_id);
										#dump($section_id_path,"id_path - $section_id");
									$url 	.= "&id_path=". $id_path;
										

									# Title
									$title = label::get_label('editar_registro').' '.$section_id;
									if (!empty($current_tag_id)) {
										$title .= ' - '.$current_component_tipo.' - '.$current_tag_id;
									}

									if(SHOW_DEBUG===true) $title .= "\n url:$url \n modo $modo, context $context->context_name";
									if (empty($current_row['id'])) {
										$table .= "<div class='div_image_link link' title=\"$title\" onclick=\"alert('Deleted record')\"> ! </div>";
									}else{
										$additional_css_style = $permissions <2 ? 'style="height: 100%;"' : '' ;
										$table .= "<a href=\"javascript:void(0);\" onclick=\"component_portal.open_record(this,'$url')\"
										id=\"portal_link_open_{$section_tipo}_{$section_id}\"
										class=\"id_column_buttons button_edit link\"
										$additional_css_style
										title=\"$title\">";
											# SECTION_ID TEXT
											$table .= "<span class=\"section_id_number\">";
											$table .= " $section_id ";
											$table .= "</span>"; 
										$table .= "</a>";											
									}
								

								#
								# DELETE RECORD BUTTON
									if ($permissions>=2) {
										
										$title	= label::get_label('borrar') .' '. label::get_label('recurso');										
										$table .= "<a href=\"javascript:void(0);\" class=\"id_column_buttons button_delete link\" onclick=\"component_portal.open_delete_dialog(this)\"
										data-rel_locator='{$rel_locator}'
										data-permission_section=\"{$permission_section}\"
										title=\"$title\">";
										if(SHOW_DEBUG===true) {
											/*
											$table .= "<mark class=\"debug_info\">";
											$table .= $target_section_tipo;
											$table .= '-'.$current_section_id;
											$table .= isset($current_component_tipo) ? '-'.$current_component_tipo : '';
											$table .= isset($current_tag_id) ? '-'.$current_tag_id : '';
											$table .= "</mark>";
											*/
										}
										$table .= "</a>";
									}
								/*
								if(SHOW_DEBUG===true) {
									$table .= " <br><mark class=\"row_debug_info\">";
									$table .= "$target_section_tipo $current_section_id";
									if ($current_tag_id) {
									 $table .= "-$current_tag_id";
									}
									$table .= "</mark>";
								}
								*/

								$table .= "</td>";


							#
							# TAG_ID
							}else if($column_tipo=='tag_id') {

								$table .= "<td class=\"td_tag_id\">";

								if( isset($current_locator->component_tipo) && isset($current_locator->tag_id) ) {

									$component_name = RecordObj_dd::get_termino_by_tipo($current_locator->component_tipo);

									$table .= "<div class=\"tag_id tooltip_active\" title=\"$component_name\">";											
									$table .= $current_locator->tag_id;
									$table .= "</div>";
								}
				
								$table .= "</td>";

							#
							# DEDALO SEMANTICS COLUMNS
							}else if ( strpos($column_tipo, 'ds_')===0 ) {

								# Convert column name from 'ds_myname' to 'myname'
								$ds_key = substr($column_tipo, 3);

								# Mandatory vars to create semantic_node column
								$semantic_wrapper_id = $ds_key.'_'.$current_locator->section_tipo.'_'.$current_locator->section_id;
								$ds_element 		 = isset($current_locator->ds->$ds_key) ? $current_locator->ds->$ds_key : null;
									
								$table .= "<td class=\"td_ds\">";
								ob_start();
								include(DEDALO_LIB_BASE_PATH . '/tools/tool_semantic_nodes/html/tool_semantic_nodes_node.phtml');
								$table .= ob_get_clean();
								$table .= "</td>";
						

							#
							# COMPONENTS COLUMNS
							}else{

								$modelo_name = RecordObj_dd::get_modelo_name_by_tipo($column_tipo, true);

								# aditional td css selectors
								$td_css_selector = 'td_'.$modelo_name.' td_'.$column_tipo;

								# Row value default
								/*
								if (!isset($current_row[$column_tipo])) {
									$table .= "<td class=\"$td_css_selector\">"; 	dump($current_row[$column_tipo], ' excluded column_tipo ++ '.to_string($column_tipo));
									$table .= ' '; // User with NO access to this column
									$table .= "</td>";
									continue;
								}
								*/
								#dump($modelo_name, ' PORTAL EDIT modelo_name ++ '.to_string($column_tipo));

								
								$column_value = isset($current_row[$column_tipo]) ? $current_row[$column_tipo] : null;
									#dump($column_value, ' column_value ++ '.to_string());

								# Detect and avoid structure errors (portal list with deprecated elements for example)
								if (strpos($modelo_name, 'component_')===false) {
									dump($modelo_name, ' wrong modelo_name ++ column_tipo: '.to_string($column_tipo));
									continue;
								}

								$render_list_mode = 'portal_list';
								# Overwrite default list mode when need. Set component propiedades 'elements_list_mode' as you want, like edit..
								if (isset($propiedades->elements_list_mode->$column_tipo->mode)) {
									$render_list_mode = $propiedades->elements_list_mode->$column_tipo->mode;
								}
								$value = (string)$modelo_name::render_list_value($column_value, // value string from db
																				 $column_tipo, // current component tipo
																				 $section_id, // current portal row section id
																				 $render_list_mode, // mode get form properties or default
																				 DEDALO_DATA_LANG, // current data lang
																				 $target_section_tipo, // current section tipo
																				 $section_id, // Current portal parent
																				 $current_locator, // Used by text_area to select fragment
																				 $tipo // Current component_portal tipo
																				);

								#
								# TD COLUMN
								$table .= "<td class=\"$td_css_selector\">";
								$table .= "<div>";
								if (is_string($value)) {
									$table .= $value;
								}else{
									$table .= to_string($value);
								}
								$table .= "</div>";									
								$table .= "</td>";

							}//end if ($modelo_name=='component_portal')
						}//end foreach ($ar_columns as $column_tipo => $column_label)
						$table .= "</tr>";	

				}//end if ($this->html_options->header)


				# When no result, Empty row is render for drag
				/*
				if (empty($rows_data->result) && !empty($dato)) {
					$table .= "<tr><td colspan=\"".count($ar_columns)."\">";
					if(SHOW_DEBUG===true) {
						$table .= "<div class=\"warning\">DEBUG INFO: I can't resolve this locator: <blockquote> ".to_string($dato,true)."</blockquote></div>";
					}else{
						$table .= " ";
					}							
					$table .= "</td></tr>";
				}
				*/					

				$table .= "</tbody>";
				$table .= '</table>';
				$html_content .= $table;

				
				$html_content .= "</div>";#end section_list_rows_content_div
				$html_content .= "</section>";# end portal_section



				#
				# DRAG ACTIVATE (for current table)
				#
				if ($this->html_options->sortable) {
					$html_content .= "<script>component_portal.active_portal_table_sortable('portal_table_{$tipo}', '$dragable_connectWith')</script>";
				}
				break;

		}//end switch($permissions)


		# Prepare content to show in page
		tools::prepare_content($html_content);	
		

		# PRINT HTML
		if ($show_button_new && $this->html_options->buttons) {
			print $html_label;
		}


		# DEBUG INFO
		if(SHOW_DEBUG===true && !empty($rows_data->result)) {
			#dump($this, ' this 1 ');
			$limit_time=SLOW_QUERY_MS/10;
			$html_info='';
			#dump($rows_data,"");
			$total_list_time = $rows_data->generated_time['get_records_data'] + round(microtime(1)-$start_time,3);
			$style='';
			if ($total_list_time>$limit_time) {
				$style = "color:red";
			}			
			$html_info .= "<div class=\"debug_info portal_debug_info\" style=\"{$style}\" onclick=\"$(this).children('pre').toggle()\"> Time: ";
			$html_info .= $total_list_time;
			#$html_info .= ", get_rows_data:".$rows_data->generated_time['get_rows_data']." (over {$rows_data->options->full_count} records)";
			#$html_info .= ", HTML section list: ".round(microtime(1)-$start_time,3);
			if (isset($rows_data->generated_time['rows_paginator'])) {
				#$html_info .= ", rows_paginator: ".$rows_data->generated_time['rows_paginator'];
			}			
			if (isset($rows_data->generated_time['rows_header'])) {
				#$html_info .= ", rows_header: ".$rows_data->generated_time['rows_header'];
			}
			if (isset($rows_data->generated_time['rows'])) {		
				#$html_info .= ", rows: ".$rows_data->generated_time['rows'];
			}
			#dump($rows_data->options->search_options_session_key," ");
			if (isset($rows_data->options->search_options_session_key)) {		
				$html_info .= ", ".$rows_data->options->search_options_session_key;
			}
			$html_info .= "";
			$html_info .= "<pre style=\"display:none\"> ".$rows_data->strQuery ."</pre>";
			$html_info .= "<pre style=\"display:none\"> ".$dato_json ."</pre>";
			#$html_info .= "$dato_json";
			$html_info .= "</div>";
			#echo "<div> Time To Generate section list: HTML: ".round(microtime(1)-$start_time,3)."</div>";
			
				
			$html_content .= $html_info;
		}#end if(SHOW_DEBUG===true)
		
		print $html_content;
	
	
	print "</div>"; //wrap


	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'out');


?>